package stdgolibs

import (
	pkg "syscall"

	"reflect"
)

func init() {
	registerValues("syscall", map[string]reflect.Value{
		// Functions
		"TranslateAccountName":                   reflect.ValueOf(pkg.TranslateAccountName),
		"StringToSid":                            reflect.ValueOf(pkg.StringToSid),
		"LookupSID":                              reflect.ValueOf(pkg.LookupSID),
		"OpenCurrentProcessToken":                reflect.ValueOf(pkg.OpenCurrentProcessToken),
		"StringToUTF16":                          reflect.ValueOf(pkg.StringToUTF16),
		"UTF16FromString":                        reflect.ValueOf(pkg.UTF16FromString),
		"UTF16ToString":                          reflect.ValueOf(pkg.UTF16ToString),
		"StringToUTF16Ptr":                       reflect.ValueOf(pkg.StringToUTF16Ptr),
		"UTF16PtrFromString":                     reflect.ValueOf(pkg.UTF16PtrFromString),
		"FormatMessage":                          reflect.ValueOf(pkg.FormatMessage),
		"NewCallback":                            reflect.ValueOf(pkg.NewCallback),
		"NewCallbackCDecl":                       reflect.ValueOf(pkg.NewCallbackCDecl),
		"Open":                                   reflect.ValueOf(pkg.Open),
		"Read":                                   reflect.ValueOf(pkg.Read),
		"Write":                                  reflect.ValueOf(pkg.Write),
		"Seek":                                   reflect.ValueOf(pkg.Seek),
		"Close":                                  reflect.ValueOf(pkg.Close),
		"Getwd":                                  reflect.ValueOf(pkg.Getwd),
		"Chdir":                                  reflect.ValueOf(pkg.Chdir),
		"Mkdir":                                  reflect.ValueOf(pkg.Mkdir),
		"Rmdir":                                  reflect.ValueOf(pkg.Rmdir),
		"Unlink":                                 reflect.ValueOf(pkg.Unlink),
		"Rename":                                 reflect.ValueOf(pkg.Rename),
		"ComputerName":                           reflect.ValueOf(pkg.ComputerName),
		"Ftruncate":                              reflect.ValueOf(pkg.Ftruncate),
		"Gettimeofday":                           reflect.ValueOf(pkg.Gettimeofday),
		"Pipe":                                   reflect.ValueOf(pkg.Pipe),
		"Utimes":                                 reflect.ValueOf(pkg.Utimes),
		"UtimesNano":                             reflect.ValueOf(pkg.UtimesNano),
		"Fsync":                                  reflect.ValueOf(pkg.Fsync),
		"Chmod":                                  reflect.ValueOf(pkg.Chmod),
		"LoadCancelIoEx":                         reflect.ValueOf(pkg.LoadCancelIoEx),
		"LoadSetFileCompletionNotificationModes": reflect.ValueOf(pkg.LoadSetFileCompletionNotificationModes),
		"Socket":                                 reflect.ValueOf(pkg.Socket),
		"SetsockoptInt":                          reflect.ValueOf(pkg.SetsockoptInt),
		"Bind":                                   reflect.ValueOf(pkg.Bind),
		"Connect":                                reflect.ValueOf(pkg.Connect),
		"Getsockname":                            reflect.ValueOf(pkg.Getsockname),
		"Getpeername":                            reflect.ValueOf(pkg.Getpeername),
		"Listen":                                 reflect.ValueOf(pkg.Listen),
		"Shutdown":                               reflect.ValueOf(pkg.Shutdown),
		"WSASendto":                              reflect.ValueOf(pkg.WSASendto),
		"LoadGetAddrInfo":                        reflect.ValueOf(pkg.LoadGetAddrInfo),
		"LoadConnectEx":                          reflect.ValueOf(pkg.LoadConnectEx),
		"ConnectEx":                              reflect.ValueOf(pkg.ConnectEx),
		"TimespecToNsec":                         reflect.ValueOf(pkg.TimespecToNsec),
		"NsecToTimespec":                         reflect.ValueOf(pkg.NsecToTimespec),
		"Accept":                                 reflect.ValueOf(pkg.Accept),
		"Recvfrom":                               reflect.ValueOf(pkg.Recvfrom),
		"Sendto":                                 reflect.ValueOf(pkg.Sendto),
		"SetsockoptTimeval":                      reflect.ValueOf(pkg.SetsockoptTimeval),
		"GetsockoptInt":                          reflect.ValueOf(pkg.GetsockoptInt),
		"SetsockoptLinger":                       reflect.ValueOf(pkg.SetsockoptLinger),
		"SetsockoptInet4Addr":                    reflect.ValueOf(pkg.SetsockoptInet4Addr),
		"SetsockoptIPMreq":                       reflect.ValueOf(pkg.SetsockoptIPMreq),
		"SetsockoptIPv6Mreq":                     reflect.ValueOf(pkg.SetsockoptIPv6Mreq),
		"Getpid":                                 reflect.ValueOf(pkg.Getpid),
		"FindFirstFile":                          reflect.ValueOf(pkg.FindFirstFile),
		"FindNextFile":                           reflect.ValueOf(pkg.FindNextFile),
		"Getppid":                                reflect.ValueOf(pkg.Getppid),
		"Fchdir":                                 reflect.ValueOf(pkg.Fchdir),
		"Link":                                   reflect.ValueOf(pkg.Link),
		"Symlink":                                reflect.ValueOf(pkg.Symlink),
		"Fchmod":                                 reflect.ValueOf(pkg.Fchmod),
		"Chown":                                  reflect.ValueOf(pkg.Chown),
		"Lchown":                                 reflect.ValueOf(pkg.Lchown),
		"Fchown":                                 reflect.ValueOf(pkg.Fchown),
		"Getuid":                                 reflect.ValueOf(pkg.Getuid),
		"Geteuid":                                reflect.ValueOf(pkg.Geteuid),
		"Getgid":                                 reflect.ValueOf(pkg.Getgid),
		"Getegid":                                reflect.ValueOf(pkg.Getegid),
		"Getgroups":                              reflect.ValueOf(pkg.Getgroups),
		"LoadCreateSymbolicLink":                 reflect.ValueOf(pkg.LoadCreateSymbolicLink),
		"Readlink":                               reflect.ValueOf(pkg.Readlink),
		"CreateIoCompletionPort":                 reflect.ValueOf(pkg.CreateIoCompletionPort),
		"GetQueuedCompletionStatus":              reflect.ValueOf(pkg.GetQueuedCompletionStatus),
		"PostQueuedCompletionStatus":             reflect.ValueOf(pkg.PostQueuedCompletionStatus),
		"NsecToTimeval":                          reflect.ValueOf(pkg.NsecToTimeval),
		"NsecToFiletime":                         reflect.ValueOf(pkg.NsecToFiletime),
		"Getenv":                                 reflect.ValueOf(pkg.Getenv),
		"Setenv":                                 reflect.ValueOf(pkg.Setenv),
		"Unsetenv":                               reflect.ValueOf(pkg.Unsetenv),
		"Clearenv":                               reflect.ValueOf(pkg.Clearenv),
		"Environ":                                reflect.ValueOf(pkg.Environ),
		"ConvertSidToStringSid":                  reflect.ValueOf(pkg.ConvertSidToStringSid),
		"ConvertStringSidToSid":                  reflect.ValueOf(pkg.ConvertStringSidToSid),
		"CopySid":                                reflect.ValueOf(pkg.CopySid),
		"CreateProcessAsUser":                    reflect.ValueOf(pkg.CreateProcessAsUser),
		"CryptAcquireContext":                    reflect.ValueOf(pkg.CryptAcquireContext),
		"CryptGenRandom":                         reflect.ValueOf(pkg.CryptGenRandom),
		"CryptReleaseContext":                    reflect.ValueOf(pkg.CryptReleaseContext),
		"GetLengthSid":                           reflect.ValueOf(pkg.GetLengthSid),
		"GetTokenInformation":                    reflect.ValueOf(pkg.GetTokenInformation),
		"LookupAccountName":                      reflect.ValueOf(pkg.LookupAccountName),
		"LookupAccountSid":                       reflect.ValueOf(pkg.LookupAccountSid),
		"OpenProcessToken":                       reflect.ValueOf(pkg.OpenProcessToken),
		"RegCloseKey":                            reflect.ValueOf(pkg.RegCloseKey),
		"RegEnumKeyEx":                           reflect.ValueOf(pkg.RegEnumKeyEx),
		"RegOpenKeyEx":                           reflect.ValueOf(pkg.RegOpenKeyEx),
		"RegQueryInfoKey":                        reflect.ValueOf(pkg.RegQueryInfoKey),
		"RegQueryValueEx":                        reflect.ValueOf(pkg.RegQueryValueEx),
		"CertAddCertificateContextToStore":       reflect.ValueOf(pkg.CertAddCertificateContextToStore),
		"CertCloseStore":                         reflect.ValueOf(pkg.CertCloseStore),
		"CertCreateCertificateContext":           reflect.ValueOf(pkg.CertCreateCertificateContext),
		"CertEnumCertificatesInStore":            reflect.ValueOf(pkg.CertEnumCertificatesInStore),
		"CertFreeCertificateChain":               reflect.ValueOf(pkg.CertFreeCertificateChain),
		"CertFreeCertificateContext":             reflect.ValueOf(pkg.CertFreeCertificateContext),
		"CertGetCertificateChain":                reflect.ValueOf(pkg.CertGetCertificateChain),
		"CertOpenStore":                          reflect.ValueOf(pkg.CertOpenStore),
		"CertOpenSystemStore":                    reflect.ValueOf(pkg.CertOpenSystemStore),
		"CertVerifyCertificateChainPolicy":       reflect.ValueOf(pkg.CertVerifyCertificateChainPolicy),
		"DnsNameCompare":                         reflect.ValueOf(pkg.DnsNameCompare),
		"DnsQuery":                               reflect.ValueOf(pkg.DnsQuery),
		"DnsRecordListFree":                      reflect.ValueOf(pkg.DnsRecordListFree),
		"GetAdaptersInfo":                        reflect.ValueOf(pkg.GetAdaptersInfo),
		"GetIfEntry":                             reflect.ValueOf(pkg.GetIfEntry),
		"CancelIo":                               reflect.ValueOf(pkg.CancelIo),
		"CancelIoEx":                             reflect.ValueOf(pkg.CancelIoEx),
		"CloseHandle":                            reflect.ValueOf(pkg.CloseHandle),
		"CreateDirectory":                        reflect.ValueOf(pkg.CreateDirectory),
		"CreateFileMapping":                      reflect.ValueOf(pkg.CreateFileMapping),
		"CreateFile":                             reflect.ValueOf(pkg.CreateFile),
		"CreateHardLink":                         reflect.ValueOf(pkg.CreateHardLink),
		"CreatePipe":                             reflect.ValueOf(pkg.CreatePipe),
		"CreateProcess":                          reflect.ValueOf(pkg.CreateProcess),
		"CreateSymbolicLink":                     reflect.ValueOf(pkg.CreateSymbolicLink),
		"CreateToolhelp32Snapshot":               reflect.ValueOf(pkg.CreateToolhelp32Snapshot),
		"DeleteFile":                             reflect.ValueOf(pkg.DeleteFile),
		"DeviceIoControl":                        reflect.ValueOf(pkg.DeviceIoControl),
		"DuplicateHandle":                        reflect.ValueOf(pkg.DuplicateHandle),
		"ExitProcess":                            reflect.ValueOf(pkg.ExitProcess),
		"FindClose":                              reflect.ValueOf(pkg.FindClose),
		"FlushFileBuffers":                       reflect.ValueOf(pkg.FlushFileBuffers),
		"FlushViewOfFile":                        reflect.ValueOf(pkg.FlushViewOfFile),
		"FreeEnvironmentStrings":                 reflect.ValueOf(pkg.FreeEnvironmentStrings),
		"FreeLibrary":                            reflect.ValueOf(pkg.FreeLibrary),
		"GetCommandLine":                         reflect.ValueOf(pkg.GetCommandLine),
		"GetComputerName":                        reflect.ValueOf(pkg.GetComputerName),
		"GetConsoleMode":                         reflect.ValueOf(pkg.GetConsoleMode),
		"GetCurrentDirectory":                    reflect.ValueOf(pkg.GetCurrentDirectory),
		"GetCurrentProcess":                      reflect.ValueOf(pkg.GetCurrentProcess),
		"GetEnvironmentStrings":                  reflect.ValueOf(pkg.GetEnvironmentStrings),
		"GetEnvironmentVariable":                 reflect.ValueOf(pkg.GetEnvironmentVariable),
		"GetExitCodeProcess":                     reflect.ValueOf(pkg.GetExitCodeProcess),
		"GetFileAttributesEx":                    reflect.ValueOf(pkg.GetFileAttributesEx),
		"GetFileAttributes":                      reflect.ValueOf(pkg.GetFileAttributes),
		"GetFileInformationByHandle":             reflect.ValueOf(pkg.GetFileInformationByHandle),
		"GetFileType":                            reflect.ValueOf(pkg.GetFileType),
		"GetFullPathName":                        reflect.ValueOf(pkg.GetFullPathName),
		"GetLastError":                           reflect.ValueOf(pkg.GetLastError),
		"GetLongPathName":                        reflect.ValueOf(pkg.GetLongPathName),
		"GetProcAddress":                         reflect.ValueOf(pkg.GetProcAddress),
		"GetProcessTimes":                        reflect.ValueOf(pkg.GetProcessTimes),
		"GetShortPathName":                       reflect.ValueOf(pkg.GetShortPathName),
		"GetStartupInfo":                         reflect.ValueOf(pkg.GetStartupInfo),
		"GetStdHandle":                           reflect.ValueOf(pkg.GetStdHandle),
		"GetSystemTimeAsFileTime":                reflect.ValueOf(pkg.GetSystemTimeAsFileTime),
		"GetTempPath":                            reflect.ValueOf(pkg.GetTempPath),
		"GetTimeZoneInformation":                 reflect.ValueOf(pkg.GetTimeZoneInformation),
		"GetVersion":                             reflect.ValueOf(pkg.GetVersion),
		"LoadLibrary":                            reflect.ValueOf(pkg.LoadLibrary),
		"LocalFree":                              reflect.ValueOf(pkg.LocalFree),
		"MapViewOfFile":                          reflect.ValueOf(pkg.MapViewOfFile),
		"MoveFile":                               reflect.ValueOf(pkg.MoveFile),
		"OpenProcess":                            reflect.ValueOf(pkg.OpenProcess),
		"Process32First":                         reflect.ValueOf(pkg.Process32First),
		"Process32Next":                          reflect.ValueOf(pkg.Process32Next),
		"ReadConsole":                            reflect.ValueOf(pkg.ReadConsole),
		"ReadDirectoryChanges":                   reflect.ValueOf(pkg.ReadDirectoryChanges),
		"ReadFile":                               reflect.ValueOf(pkg.ReadFile),
		"RemoveDirectory":                        reflect.ValueOf(pkg.RemoveDirectory),
		"SetCurrentDirectory":                    reflect.ValueOf(pkg.SetCurrentDirectory),
		"SetEndOfFile":                           reflect.ValueOf(pkg.SetEndOfFile),
		"SetEnvironmentVariable":                 reflect.ValueOf(pkg.SetEnvironmentVariable),
		"SetFileAttributes":                      reflect.ValueOf(pkg.SetFileAttributes),
		"SetFileCompletionNotificationModes":     reflect.ValueOf(pkg.SetFileCompletionNotificationModes),
		"SetFilePointer":                         reflect.ValueOf(pkg.SetFilePointer),
		"SetFileTime":                            reflect.ValueOf(pkg.SetFileTime),
		"SetHandleInformation":                   reflect.ValueOf(pkg.SetHandleInformation),
		"TerminateProcess":                       reflect.ValueOf(pkg.TerminateProcess),
		"UnmapViewOfFile":                        reflect.ValueOf(pkg.UnmapViewOfFile),
		"VirtualLock":                            reflect.ValueOf(pkg.VirtualLock),
		"VirtualUnlock":                          reflect.ValueOf(pkg.VirtualUnlock),
		"WaitForSingleObject":                    reflect.ValueOf(pkg.WaitForSingleObject),
		"WriteConsole":                           reflect.ValueOf(pkg.WriteConsole),
		"WriteFile":                              reflect.ValueOf(pkg.WriteFile),
		"AcceptEx":                               reflect.ValueOf(pkg.AcceptEx),
		"GetAcceptExSockaddrs":                   reflect.ValueOf(pkg.GetAcceptExSockaddrs),
		"TransmitFile":                           reflect.ValueOf(pkg.TransmitFile),
		"NetApiBufferFree":                       reflect.ValueOf(pkg.NetApiBufferFree),
		"NetGetJoinInformation":                  reflect.ValueOf(pkg.NetGetJoinInformation),
		"NetUserGetInfo":                         reflect.ValueOf(pkg.NetUserGetInfo),
		"GetUserNameEx":                          reflect.ValueOf(pkg.GetUserNameEx),
		"TranslateName":                          reflect.ValueOf(pkg.TranslateName),
		"CommandLineToArgv":                      reflect.ValueOf(pkg.CommandLineToArgv),
		"GetUserProfileDirectory":                reflect.ValueOf(pkg.GetUserProfileDirectory),
		"FreeAddrInfoW":                          reflect.ValueOf(pkg.FreeAddrInfoW),
		"GetAddrInfoW":                           reflect.ValueOf(pkg.GetAddrInfoW),
		"WSACleanup":                             reflect.ValueOf(pkg.WSACleanup),
		"WSAEnumProtocols":                       reflect.ValueOf(pkg.WSAEnumProtocols),
		"WSAIoctl":                               reflect.ValueOf(pkg.WSAIoctl),
		"WSARecv":                                reflect.ValueOf(pkg.WSARecv),
		"WSARecvFrom":                            reflect.ValueOf(pkg.WSARecvFrom),
		"WSASend":                                reflect.ValueOf(pkg.WSASend),
		"WSASendTo":                              reflect.ValueOf(pkg.WSASendTo),
		"WSAStartup":                             reflect.ValueOf(pkg.WSAStartup),
		"Closesocket":                            reflect.ValueOf(pkg.Closesocket),
		"GetHostByName":                          reflect.ValueOf(pkg.GetHostByName),
		"GetProtoByName":                         reflect.ValueOf(pkg.GetProtoByName),
		"GetServByName":                          reflect.ValueOf(pkg.GetServByName),
		"Getsockopt":                             reflect.ValueOf(pkg.Getsockopt),
		"Ntohs":                                  reflect.ValueOf(pkg.Ntohs),
		"Setsockopt":                             reflect.ValueOf(pkg.Setsockopt),
		"StringByteSlice":                        reflect.ValueOf(pkg.StringByteSlice),
		"ByteSliceFromString":                    reflect.ValueOf(pkg.ByteSliceFromString),
		"StringBytePtr":                          reflect.ValueOf(pkg.StringBytePtr),
		"BytePtrFromString":                      reflect.ValueOf(pkg.BytePtrFromString),
		"Getpagesize":                            reflect.ValueOf(pkg.Getpagesize),
		"Exit":                                   reflect.ValueOf(pkg.Exit),
		"EscapeArg":                              reflect.ValueOf(pkg.EscapeArg),
		"CloseOnExec":                            reflect.ValueOf(pkg.CloseOnExec),
		"SetNonblock":                            reflect.ValueOf(pkg.SetNonblock),
		"FullPath":                               reflect.ValueOf(pkg.FullPath),
		"StartProcess":                           reflect.ValueOf(pkg.StartProcess),
		"Exec":                                   reflect.ValueOf(pkg.Exec),
		"Syscall":                                reflect.ValueOf(pkg.Syscall),
		"Syscall6":                               reflect.ValueOf(pkg.Syscall6),
		"Syscall9":                               reflect.ValueOf(pkg.Syscall9),
		"Syscall12":                              reflect.ValueOf(pkg.Syscall12),
		"Syscall15":                              reflect.ValueOf(pkg.Syscall15),
		"Syscall18":                              reflect.ValueOf(pkg.Syscall18),
		"LoadDLL":                                reflect.ValueOf(pkg.LoadDLL),
		"MustLoadDLL":                            reflect.ValueOf(pkg.MustLoadDLL),
		"NewLazyDLL":                             reflect.ValueOf(pkg.NewLazyDLL),

		// Consts

		"STANDARD_RIGHTS_REQUIRED":         reflect.ValueOf(pkg.STANDARD_RIGHTS_REQUIRED),
		"STANDARD_RIGHTS_READ":             reflect.ValueOf(pkg.STANDARD_RIGHTS_READ),
		"STANDARD_RIGHTS_WRITE":            reflect.ValueOf(pkg.STANDARD_RIGHTS_WRITE),
		"STANDARD_RIGHTS_EXECUTE":          reflect.ValueOf(pkg.STANDARD_RIGHTS_EXECUTE),
		"STANDARD_RIGHTS_ALL":              reflect.ValueOf(pkg.STANDARD_RIGHTS_ALL),
		"NameUnknown":                      reflect.ValueOf(pkg.NameUnknown),
		"NameFullyQualifiedDN":             reflect.ValueOf(pkg.NameFullyQualifiedDN),
		"NameSamCompatible":                reflect.ValueOf(pkg.NameSamCompatible),
		"NameDisplay":                      reflect.ValueOf(pkg.NameDisplay),
		"NameUniqueId":                     reflect.ValueOf(pkg.NameUniqueId),
		"NameCanonical":                    reflect.ValueOf(pkg.NameCanonical),
		"NameUserPrincipal":                reflect.ValueOf(pkg.NameUserPrincipal),
		"NameCanonicalEx":                  reflect.ValueOf(pkg.NameCanonicalEx),
		"NameServicePrincipal":             reflect.ValueOf(pkg.NameServicePrincipal),
		"NameDnsDomain":                    reflect.ValueOf(pkg.NameDnsDomain),
		"NetSetupUnknownStatus":            reflect.ValueOf(pkg.NetSetupUnknownStatus),
		"NetSetupUnjoined":                 reflect.ValueOf(pkg.NetSetupUnjoined),
		"NetSetupWorkgroupName":            reflect.ValueOf(pkg.NetSetupWorkgroupName),
		"NetSetupDomainName":               reflect.ValueOf(pkg.NetSetupDomainName),
		"SidTypeUser":                      reflect.ValueOf(pkg.SidTypeUser),
		"SidTypeGroup":                     reflect.ValueOf(pkg.SidTypeGroup),
		"SidTypeDomain":                    reflect.ValueOf(pkg.SidTypeDomain),
		"SidTypeAlias":                     reflect.ValueOf(pkg.SidTypeAlias),
		"SidTypeWellKnownGroup":            reflect.ValueOf(pkg.SidTypeWellKnownGroup),
		"SidTypeDeletedAccount":            reflect.ValueOf(pkg.SidTypeDeletedAccount),
		"SidTypeInvalid":                   reflect.ValueOf(pkg.SidTypeInvalid),
		"SidTypeUnknown":                   reflect.ValueOf(pkg.SidTypeUnknown),
		"SidTypeComputer":                  reflect.ValueOf(pkg.SidTypeComputer),
		"SidTypeLabel":                     reflect.ValueOf(pkg.SidTypeLabel),
		"TOKEN_ASSIGN_PRIMARY":             reflect.ValueOf(pkg.TOKEN_ASSIGN_PRIMARY),
		"TOKEN_DUPLICATE":                  reflect.ValueOf(pkg.TOKEN_DUPLICATE),
		"TOKEN_IMPERSONATE":                reflect.ValueOf(pkg.TOKEN_IMPERSONATE),
		"TOKEN_QUERY":                      reflect.ValueOf(pkg.TOKEN_QUERY),
		"TOKEN_QUERY_SOURCE":               reflect.ValueOf(pkg.TOKEN_QUERY_SOURCE),
		"TOKEN_ADJUST_PRIVILEGES":          reflect.ValueOf(pkg.TOKEN_ADJUST_PRIVILEGES),
		"TOKEN_ADJUST_GROUPS":              reflect.ValueOf(pkg.TOKEN_ADJUST_GROUPS),
		"TOKEN_ADJUST_DEFAULT":             reflect.ValueOf(pkg.TOKEN_ADJUST_DEFAULT),
		"TOKEN_ADJUST_SESSIONID":           reflect.ValueOf(pkg.TOKEN_ADJUST_SESSIONID),
		"TOKEN_ALL_ACCESS":                 reflect.ValueOf(pkg.TOKEN_ALL_ACCESS),
		"TOKEN_READ":                       reflect.ValueOf(pkg.TOKEN_READ),
		"TOKEN_WRITE":                      reflect.ValueOf(pkg.TOKEN_WRITE),
		"TOKEN_EXECUTE":                    reflect.ValueOf(pkg.TOKEN_EXECUTE),
		"TokenUser":                        reflect.ValueOf(pkg.TokenUser),
		"TokenGroups":                      reflect.ValueOf(pkg.TokenGroups),
		"TokenPrivileges":                  reflect.ValueOf(pkg.TokenPrivileges),
		"TokenOwner":                       reflect.ValueOf(pkg.TokenOwner),
		"TokenPrimaryGroup":                reflect.ValueOf(pkg.TokenPrimaryGroup),
		"TokenDefaultDacl":                 reflect.ValueOf(pkg.TokenDefaultDacl),
		"TokenSource":                      reflect.ValueOf(pkg.TokenSource),
		"TokenType":                        reflect.ValueOf(pkg.TokenType),
		"TokenImpersonationLevel":          reflect.ValueOf(pkg.TokenImpersonationLevel),
		"TokenStatistics":                  reflect.ValueOf(pkg.TokenStatistics),
		"TokenRestrictedSids":              reflect.ValueOf(pkg.TokenRestrictedSids),
		"TokenSessionId":                   reflect.ValueOf(pkg.TokenSessionId),
		"TokenGroupsAndPrivileges":         reflect.ValueOf(pkg.TokenGroupsAndPrivileges),
		"TokenSessionReference":            reflect.ValueOf(pkg.TokenSessionReference),
		"TokenSandBoxInert":                reflect.ValueOf(pkg.TokenSandBoxInert),
		"TokenAuditPolicy":                 reflect.ValueOf(pkg.TokenAuditPolicy),
		"TokenOrigin":                      reflect.ValueOf(pkg.TokenOrigin),
		"TokenElevationType":               reflect.ValueOf(pkg.TokenElevationType),
		"TokenLinkedToken":                 reflect.ValueOf(pkg.TokenLinkedToken),
		"TokenElevation":                   reflect.ValueOf(pkg.TokenElevation),
		"TokenHasRestrictions":             reflect.ValueOf(pkg.TokenHasRestrictions),
		"TokenAccessInformation":           reflect.ValueOf(pkg.TokenAccessInformation),
		"TokenVirtualizationAllowed":       reflect.ValueOf(pkg.TokenVirtualizationAllowed),
		"TokenVirtualizationEnabled":       reflect.ValueOf(pkg.TokenVirtualizationEnabled),
		"TokenIntegrityLevel":              reflect.ValueOf(pkg.TokenIntegrityLevel),
		"TokenUIAccess":                    reflect.ValueOf(pkg.TokenUIAccess),
		"TokenMandatoryPolicy":             reflect.ValueOf(pkg.TokenMandatoryPolicy),
		"TokenLogonSid":                    reflect.ValueOf(pkg.TokenLogonSid),
		"MaxTokenInfoClass":                reflect.ValueOf(pkg.MaxTokenInfoClass),
		"InvalidHandle":                    reflect.ValueOf(pkg.InvalidHandle),
		"ImplementsGetwd":                  reflect.ValueOf(pkg.ImplementsGetwd),
		"ERROR_FILE_NOT_FOUND":             reflect.ValueOf(pkg.ERROR_FILE_NOT_FOUND),
		"ERROR_PATH_NOT_FOUND":             reflect.ValueOf(pkg.ERROR_PATH_NOT_FOUND),
		"ERROR_ACCESS_DENIED":              reflect.ValueOf(pkg.ERROR_ACCESS_DENIED),
		"ERROR_NO_MORE_FILES":              reflect.ValueOf(pkg.ERROR_NO_MORE_FILES),
		"ERROR_HANDLE_EOF":                 reflect.ValueOf(pkg.ERROR_HANDLE_EOF),
		"ERROR_NETNAME_DELETED":            reflect.ValueOf(pkg.ERROR_NETNAME_DELETED),
		"ERROR_FILE_EXISTS":                reflect.ValueOf(pkg.ERROR_FILE_EXISTS),
		"ERROR_BROKEN_PIPE":                reflect.ValueOf(pkg.ERROR_BROKEN_PIPE),
		"ERROR_BUFFER_OVERFLOW":            reflect.ValueOf(pkg.ERROR_BUFFER_OVERFLOW),
		"ERROR_INSUFFICIENT_BUFFER":        reflect.ValueOf(pkg.ERROR_INSUFFICIENT_BUFFER),
		"ERROR_MOD_NOT_FOUND":              reflect.ValueOf(pkg.ERROR_MOD_NOT_FOUND),
		"ERROR_PROC_NOT_FOUND":             reflect.ValueOf(pkg.ERROR_PROC_NOT_FOUND),
		"ERROR_DIR_NOT_EMPTY":              reflect.ValueOf(pkg.ERROR_DIR_NOT_EMPTY),
		"ERROR_ALREADY_EXISTS":             reflect.ValueOf(pkg.ERROR_ALREADY_EXISTS),
		"ERROR_ENVVAR_NOT_FOUND":           reflect.ValueOf(pkg.ERROR_ENVVAR_NOT_FOUND),
		"ERROR_MORE_DATA":                  reflect.ValueOf(pkg.ERROR_MORE_DATA),
		"ERROR_OPERATION_ABORTED":          reflect.ValueOf(pkg.ERROR_OPERATION_ABORTED),
		"ERROR_IO_PENDING":                 reflect.ValueOf(pkg.ERROR_IO_PENDING),
		"ERROR_NOT_FOUND":                  reflect.ValueOf(pkg.ERROR_NOT_FOUND),
		"ERROR_PRIVILEGE_NOT_HELD":         reflect.ValueOf(pkg.ERROR_PRIVILEGE_NOT_HELD),
		"WSAEACCES":                        reflect.ValueOf(pkg.WSAEACCES),
		"WSAECONNABORTED":                  reflect.ValueOf(pkg.WSAECONNABORTED),
		"WSAECONNRESET":                    reflect.ValueOf(pkg.WSAECONNRESET),
		"O_RDONLY":                         reflect.ValueOf(pkg.O_RDONLY),
		"O_WRONLY":                         reflect.ValueOf(pkg.O_WRONLY),
		"O_RDWR":                           reflect.ValueOf(pkg.O_RDWR),
		"O_CREAT":                          reflect.ValueOf(pkg.O_CREAT),
		"O_EXCL":                           reflect.ValueOf(pkg.O_EXCL),
		"O_NOCTTY":                         reflect.ValueOf(pkg.O_NOCTTY),
		"O_TRUNC":                          reflect.ValueOf(pkg.O_TRUNC),
		"O_NONBLOCK":                       reflect.ValueOf(pkg.O_NONBLOCK),
		"O_APPEND":                         reflect.ValueOf(pkg.O_APPEND),
		"O_SYNC":                           reflect.ValueOf(pkg.O_SYNC),
		"O_ASYNC":                          reflect.ValueOf(pkg.O_ASYNC),
		"O_CLOEXEC":                        reflect.ValueOf(pkg.O_CLOEXEC),
		"SIGHUP":                           reflect.ValueOf(pkg.SIGHUP),
		"SIGINT":                           reflect.ValueOf(pkg.SIGINT),
		"SIGQUIT":                          reflect.ValueOf(pkg.SIGQUIT),
		"SIGILL":                           reflect.ValueOf(pkg.SIGILL),
		"SIGTRAP":                          reflect.ValueOf(pkg.SIGTRAP),
		"SIGABRT":                          reflect.ValueOf(pkg.SIGABRT),
		"SIGBUS":                           reflect.ValueOf(pkg.SIGBUS),
		"SIGFPE":                           reflect.ValueOf(pkg.SIGFPE),
		"SIGKILL":                          reflect.ValueOf(pkg.SIGKILL),
		"SIGSEGV":                          reflect.ValueOf(pkg.SIGSEGV),
		"SIGPIPE":                          reflect.ValueOf(pkg.SIGPIPE),
		"SIGALRM":                          reflect.ValueOf(pkg.SIGALRM),
		"SIGTERM":                          reflect.ValueOf(pkg.SIGTERM),
		"GENERIC_READ":                     reflect.ValueOf(pkg.GENERIC_READ),
		"GENERIC_WRITE":                    reflect.ValueOf(pkg.GENERIC_WRITE),
		"GENERIC_EXECUTE":                  reflect.ValueOf(pkg.GENERIC_EXECUTE),
		"GENERIC_ALL":                      reflect.ValueOf(pkg.GENERIC_ALL),
		"FILE_LIST_DIRECTORY":              reflect.ValueOf(pkg.FILE_LIST_DIRECTORY),
		"FILE_APPEND_DATA":                 reflect.ValueOf(pkg.FILE_APPEND_DATA),
		"FILE_WRITE_ATTRIBUTES":            reflect.ValueOf(pkg.FILE_WRITE_ATTRIBUTES),
		"FILE_SHARE_READ":                  reflect.ValueOf(pkg.FILE_SHARE_READ),
		"FILE_SHARE_WRITE":                 reflect.ValueOf(pkg.FILE_SHARE_WRITE),
		"FILE_SHARE_DELETE":                reflect.ValueOf(pkg.FILE_SHARE_DELETE),
		"FILE_ATTRIBUTE_READONLY":          reflect.ValueOf(pkg.FILE_ATTRIBUTE_READONLY),
		"FILE_ATTRIBUTE_HIDDEN":            reflect.ValueOf(pkg.FILE_ATTRIBUTE_HIDDEN),
		"FILE_ATTRIBUTE_SYSTEM":            reflect.ValueOf(pkg.FILE_ATTRIBUTE_SYSTEM),
		"FILE_ATTRIBUTE_DIRECTORY":         reflect.ValueOf(pkg.FILE_ATTRIBUTE_DIRECTORY),
		"FILE_ATTRIBUTE_ARCHIVE":           reflect.ValueOf(pkg.FILE_ATTRIBUTE_ARCHIVE),
		"FILE_ATTRIBUTE_NORMAL":            reflect.ValueOf(pkg.FILE_ATTRIBUTE_NORMAL),
		"FILE_ATTRIBUTE_REPARSE_POINT":     reflect.ValueOf(pkg.FILE_ATTRIBUTE_REPARSE_POINT),
		"INVALID_FILE_ATTRIBUTES":          reflect.ValueOf(pkg.INVALID_FILE_ATTRIBUTES),
		"CREATE_NEW":                       reflect.ValueOf(pkg.CREATE_NEW),
		"CREATE_ALWAYS":                    reflect.ValueOf(pkg.CREATE_ALWAYS),
		"OPEN_EXISTING":                    reflect.ValueOf(pkg.OPEN_EXISTING),
		"OPEN_ALWAYS":                      reflect.ValueOf(pkg.OPEN_ALWAYS),
		"TRUNCATE_EXISTING":                reflect.ValueOf(pkg.TRUNCATE_EXISTING),
		"FILE_FLAG_OPEN_REPARSE_POINT":     reflect.ValueOf(pkg.FILE_FLAG_OPEN_REPARSE_POINT),
		"FILE_FLAG_BACKUP_SEMANTICS":       reflect.ValueOf(pkg.FILE_FLAG_BACKUP_SEMANTICS),
		"FILE_FLAG_OVERLAPPED":             reflect.ValueOf(pkg.FILE_FLAG_OVERLAPPED),
		"HANDLE_FLAG_INHERIT":              reflect.ValueOf(pkg.HANDLE_FLAG_INHERIT),
		"STARTF_USESTDHANDLES":             reflect.ValueOf(pkg.STARTF_USESTDHANDLES),
		"STARTF_USESHOWWINDOW":             reflect.ValueOf(pkg.STARTF_USESHOWWINDOW),
		"DUPLICATE_CLOSE_SOURCE":           reflect.ValueOf(pkg.DUPLICATE_CLOSE_SOURCE),
		"DUPLICATE_SAME_ACCESS":            reflect.ValueOf(pkg.DUPLICATE_SAME_ACCESS),
		"STD_INPUT_HANDLE":                 reflect.ValueOf(pkg.STD_INPUT_HANDLE),
		"STD_OUTPUT_HANDLE":                reflect.ValueOf(pkg.STD_OUTPUT_HANDLE),
		"STD_ERROR_HANDLE":                 reflect.ValueOf(pkg.STD_ERROR_HANDLE),
		"FILE_BEGIN":                       reflect.ValueOf(pkg.FILE_BEGIN),
		"FILE_CURRENT":                     reflect.ValueOf(pkg.FILE_CURRENT),
		"FILE_END":                         reflect.ValueOf(pkg.FILE_END),
		"LANG_ENGLISH":                     reflect.ValueOf(pkg.LANG_ENGLISH),
		"SUBLANG_ENGLISH_US":               reflect.ValueOf(pkg.SUBLANG_ENGLISH_US),
		"FORMAT_MESSAGE_ALLOCATE_BUFFER":   reflect.ValueOf(pkg.FORMAT_MESSAGE_ALLOCATE_BUFFER),
		"FORMAT_MESSAGE_IGNORE_INSERTS":    reflect.ValueOf(pkg.FORMAT_MESSAGE_IGNORE_INSERTS),
		"FORMAT_MESSAGE_FROM_STRING":       reflect.ValueOf(pkg.FORMAT_MESSAGE_FROM_STRING),
		"FORMAT_MESSAGE_FROM_HMODULE":      reflect.ValueOf(pkg.FORMAT_MESSAGE_FROM_HMODULE),
		"FORMAT_MESSAGE_FROM_SYSTEM":       reflect.ValueOf(pkg.FORMAT_MESSAGE_FROM_SYSTEM),
		"FORMAT_MESSAGE_ARGUMENT_ARRAY":    reflect.ValueOf(pkg.FORMAT_MESSAGE_ARGUMENT_ARRAY),
		"FORMAT_MESSAGE_MAX_WIDTH_MASK":    reflect.ValueOf(pkg.FORMAT_MESSAGE_MAX_WIDTH_MASK),
		"MAX_PATH":                         reflect.ValueOf(pkg.MAX_PATH),
		"MAX_LONG_PATH":                    reflect.ValueOf(pkg.MAX_LONG_PATH),
		"MAX_COMPUTERNAME_LENGTH":          reflect.ValueOf(pkg.MAX_COMPUTERNAME_LENGTH),
		"TIME_ZONE_ID_UNKNOWN":             reflect.ValueOf(pkg.TIME_ZONE_ID_UNKNOWN),
		"TIME_ZONE_ID_STANDARD":            reflect.ValueOf(pkg.TIME_ZONE_ID_STANDARD),
		"TIME_ZONE_ID_DAYLIGHT":            reflect.ValueOf(pkg.TIME_ZONE_ID_DAYLIGHT),
		"IGNORE":                           reflect.ValueOf(pkg.IGNORE),
		"INFINITE":                         reflect.ValueOf(pkg.INFINITE),
		"WAIT_TIMEOUT":                     reflect.ValueOf(pkg.WAIT_TIMEOUT),
		"WAIT_ABANDONED":                   reflect.ValueOf(pkg.WAIT_ABANDONED),
		"WAIT_OBJECT_0":                    reflect.ValueOf(pkg.WAIT_OBJECT_0),
		"WAIT_FAILED":                      reflect.ValueOf(pkg.WAIT_FAILED),
		"CREATE_NEW_PROCESS_GROUP":         reflect.ValueOf(pkg.CREATE_NEW_PROCESS_GROUP),
		"CREATE_UNICODE_ENVIRONMENT":       reflect.ValueOf(pkg.CREATE_UNICODE_ENVIRONMENT),
		"PROCESS_TERMINATE":                reflect.ValueOf(pkg.PROCESS_TERMINATE),
		"PROCESS_QUERY_INFORMATION":        reflect.ValueOf(pkg.PROCESS_QUERY_INFORMATION),
		"SYNCHRONIZE":                      reflect.ValueOf(pkg.SYNCHRONIZE),
		"PAGE_READONLY":                    reflect.ValueOf(pkg.PAGE_READONLY),
		"PAGE_READWRITE":                   reflect.ValueOf(pkg.PAGE_READWRITE),
		"PAGE_WRITECOPY":                   reflect.ValueOf(pkg.PAGE_WRITECOPY),
		"PAGE_EXECUTE_READ":                reflect.ValueOf(pkg.PAGE_EXECUTE_READ),
		"PAGE_EXECUTE_READWRITE":           reflect.ValueOf(pkg.PAGE_EXECUTE_READWRITE),
		"PAGE_EXECUTE_WRITECOPY":           reflect.ValueOf(pkg.PAGE_EXECUTE_WRITECOPY),
		"FILE_MAP_COPY":                    reflect.ValueOf(pkg.FILE_MAP_COPY),
		"FILE_MAP_WRITE":                   reflect.ValueOf(pkg.FILE_MAP_WRITE),
		"FILE_MAP_READ":                    reflect.ValueOf(pkg.FILE_MAP_READ),
		"FILE_MAP_EXECUTE":                 reflect.ValueOf(pkg.FILE_MAP_EXECUTE),
		"CTRL_C_EVENT":                     reflect.ValueOf(pkg.CTRL_C_EVENT),
		"CTRL_BREAK_EVENT":                 reflect.ValueOf(pkg.CTRL_BREAK_EVENT),
		"CTRL_CLOSE_EVENT":                 reflect.ValueOf(pkg.CTRL_CLOSE_EVENT),
		"CTRL_LOGOFF_EVENT":                reflect.ValueOf(pkg.CTRL_LOGOFF_EVENT),
		"CTRL_SHUTDOWN_EVENT":              reflect.ValueOf(pkg.CTRL_SHUTDOWN_EVENT),
		"TH32CS_SNAPHEAPLIST":              reflect.ValueOf(pkg.TH32CS_SNAPHEAPLIST),
		"TH32CS_SNAPPROCESS":               reflect.ValueOf(pkg.TH32CS_SNAPPROCESS),
		"TH32CS_SNAPTHREAD":                reflect.ValueOf(pkg.TH32CS_SNAPTHREAD),
		"TH32CS_SNAPMODULE":                reflect.ValueOf(pkg.TH32CS_SNAPMODULE),
		"TH32CS_SNAPMODULE32":              reflect.ValueOf(pkg.TH32CS_SNAPMODULE32),
		"TH32CS_SNAPALL":                   reflect.ValueOf(pkg.TH32CS_SNAPALL),
		"TH32CS_INHERIT":                   reflect.ValueOf(pkg.TH32CS_INHERIT),
		"FILE_NOTIFY_CHANGE_FILE_NAME":     reflect.ValueOf(pkg.FILE_NOTIFY_CHANGE_FILE_NAME),
		"FILE_NOTIFY_CHANGE_DIR_NAME":      reflect.ValueOf(pkg.FILE_NOTIFY_CHANGE_DIR_NAME),
		"FILE_NOTIFY_CHANGE_ATTRIBUTES":    reflect.ValueOf(pkg.FILE_NOTIFY_CHANGE_ATTRIBUTES),
		"FILE_NOTIFY_CHANGE_SIZE":          reflect.ValueOf(pkg.FILE_NOTIFY_CHANGE_SIZE),
		"FILE_NOTIFY_CHANGE_LAST_WRITE":    reflect.ValueOf(pkg.FILE_NOTIFY_CHANGE_LAST_WRITE),
		"FILE_NOTIFY_CHANGE_LAST_ACCESS":   reflect.ValueOf(pkg.FILE_NOTIFY_CHANGE_LAST_ACCESS),
		"FILE_NOTIFY_CHANGE_CREATION":      reflect.ValueOf(pkg.FILE_NOTIFY_CHANGE_CREATION),
		"FILE_ACTION_ADDED":                reflect.ValueOf(pkg.FILE_ACTION_ADDED),
		"FILE_ACTION_REMOVED":              reflect.ValueOf(pkg.FILE_ACTION_REMOVED),
		"FILE_ACTION_MODIFIED":             reflect.ValueOf(pkg.FILE_ACTION_MODIFIED),
		"FILE_ACTION_RENAMED_OLD_NAME":     reflect.ValueOf(pkg.FILE_ACTION_RENAMED_OLD_NAME),
		"FILE_ACTION_RENAMED_NEW_NAME":     reflect.ValueOf(pkg.FILE_ACTION_RENAMED_NEW_NAME),
		"PROV_RSA_FULL":                    reflect.ValueOf(pkg.PROV_RSA_FULL),
		"PROV_RSA_SIG":                     reflect.ValueOf(pkg.PROV_RSA_SIG),
		"PROV_DSS":                         reflect.ValueOf(pkg.PROV_DSS),
		"PROV_FORTEZZA":                    reflect.ValueOf(pkg.PROV_FORTEZZA),
		"PROV_MS_EXCHANGE":                 reflect.ValueOf(pkg.PROV_MS_EXCHANGE),
		"PROV_SSL":                         reflect.ValueOf(pkg.PROV_SSL),
		"PROV_RSA_SCHANNEL":                reflect.ValueOf(pkg.PROV_RSA_SCHANNEL),
		"PROV_DSS_DH":                      reflect.ValueOf(pkg.PROV_DSS_DH),
		"PROV_EC_ECDSA_SIG":                reflect.ValueOf(pkg.PROV_EC_ECDSA_SIG),
		"PROV_EC_ECNRA_SIG":                reflect.ValueOf(pkg.PROV_EC_ECNRA_SIG),
		"PROV_EC_ECDSA_FULL":               reflect.ValueOf(pkg.PROV_EC_ECDSA_FULL),
		"PROV_EC_ECNRA_FULL":               reflect.ValueOf(pkg.PROV_EC_ECNRA_FULL),
		"PROV_DH_SCHANNEL":                 reflect.ValueOf(pkg.PROV_DH_SCHANNEL),
		"PROV_SPYRUS_LYNKS":                reflect.ValueOf(pkg.PROV_SPYRUS_LYNKS),
		"PROV_RNG":                         reflect.ValueOf(pkg.PROV_RNG),
		"PROV_INTEL_SEC":                   reflect.ValueOf(pkg.PROV_INTEL_SEC),
		"PROV_REPLACE_OWF":                 reflect.ValueOf(pkg.PROV_REPLACE_OWF),
		"PROV_RSA_AES":                     reflect.ValueOf(pkg.PROV_RSA_AES),
		"CRYPT_VERIFYCONTEXT":              reflect.ValueOf(pkg.CRYPT_VERIFYCONTEXT),
		"CRYPT_NEWKEYSET":                  reflect.ValueOf(pkg.CRYPT_NEWKEYSET),
		"CRYPT_DELETEKEYSET":               reflect.ValueOf(pkg.CRYPT_DELETEKEYSET),
		"CRYPT_MACHINE_KEYSET":             reflect.ValueOf(pkg.CRYPT_MACHINE_KEYSET),
		"CRYPT_SILENT":                     reflect.ValueOf(pkg.CRYPT_SILENT),
		"CRYPT_DEFAULT_CONTAINER_OPTIONAL": reflect.ValueOf(pkg.CRYPT_DEFAULT_CONTAINER_OPTIONAL),
		"USAGE_MATCH_TYPE_AND":             reflect.ValueOf(pkg.USAGE_MATCH_TYPE_AND),
		"USAGE_MATCH_TYPE_OR":              reflect.ValueOf(pkg.USAGE_MATCH_TYPE_OR),
		"X509_ASN_ENCODING":                reflect.ValueOf(pkg.X509_ASN_ENCODING),
		"PKCS_7_ASN_ENCODING":              reflect.ValueOf(pkg.PKCS_7_ASN_ENCODING),
		"CERT_STORE_PROV_MEMORY":           reflect.ValueOf(pkg.CERT_STORE_PROV_MEMORY),
		"CERT_STORE_ADD_ALWAYS":            reflect.ValueOf(pkg.CERT_STORE_ADD_ALWAYS),
		"CERT_STORE_DEFER_CLOSE_UNTIL_LAST_FREE_FLAG":  reflect.ValueOf(pkg.CERT_STORE_DEFER_CLOSE_UNTIL_LAST_FREE_FLAG),
		"CERT_TRUST_NO_ERROR":                          reflect.ValueOf(pkg.CERT_TRUST_NO_ERROR),
		"CERT_TRUST_IS_NOT_TIME_VALID":                 reflect.ValueOf(pkg.CERT_TRUST_IS_NOT_TIME_VALID),
		"CERT_TRUST_IS_REVOKED":                        reflect.ValueOf(pkg.CERT_TRUST_IS_REVOKED),
		"CERT_TRUST_IS_NOT_SIGNATURE_VALID":            reflect.ValueOf(pkg.CERT_TRUST_IS_NOT_SIGNATURE_VALID),
		"CERT_TRUST_IS_NOT_VALID_FOR_USAGE":            reflect.ValueOf(pkg.CERT_TRUST_IS_NOT_VALID_FOR_USAGE),
		"CERT_TRUST_IS_UNTRUSTED_ROOT":                 reflect.ValueOf(pkg.CERT_TRUST_IS_UNTRUSTED_ROOT),
		"CERT_TRUST_REVOCATION_STATUS_UNKNOWN":         reflect.ValueOf(pkg.CERT_TRUST_REVOCATION_STATUS_UNKNOWN),
		"CERT_TRUST_IS_CYCLIC":                         reflect.ValueOf(pkg.CERT_TRUST_IS_CYCLIC),
		"CERT_TRUST_INVALID_EXTENSION":                 reflect.ValueOf(pkg.CERT_TRUST_INVALID_EXTENSION),
		"CERT_TRUST_INVALID_POLICY_CONSTRAINTS":        reflect.ValueOf(pkg.CERT_TRUST_INVALID_POLICY_CONSTRAINTS),
		"CERT_TRUST_INVALID_BASIC_CONSTRAINTS":         reflect.ValueOf(pkg.CERT_TRUST_INVALID_BASIC_CONSTRAINTS),
		"CERT_TRUST_INVALID_NAME_CONSTRAINTS":          reflect.ValueOf(pkg.CERT_TRUST_INVALID_NAME_CONSTRAINTS),
		"CERT_TRUST_HAS_NOT_SUPPORTED_NAME_CONSTRAINT": reflect.ValueOf(pkg.CERT_TRUST_HAS_NOT_SUPPORTED_NAME_CONSTRAINT),
		"CERT_TRUST_HAS_NOT_DEFINED_NAME_CONSTRAINT":   reflect.ValueOf(pkg.CERT_TRUST_HAS_NOT_DEFINED_NAME_CONSTRAINT),
		"CERT_TRUST_HAS_NOT_PERMITTED_NAME_CONSTRAINT": reflect.ValueOf(pkg.CERT_TRUST_HAS_NOT_PERMITTED_NAME_CONSTRAINT),
		"CERT_TRUST_HAS_EXCLUDED_NAME_CONSTRAINT":      reflect.ValueOf(pkg.CERT_TRUST_HAS_EXCLUDED_NAME_CONSTRAINT),
		"CERT_TRUST_IS_OFFLINE_REVOCATION":             reflect.ValueOf(pkg.CERT_TRUST_IS_OFFLINE_REVOCATION),
		"CERT_TRUST_NO_ISSUANCE_CHAIN_POLICY":          reflect.ValueOf(pkg.CERT_TRUST_NO_ISSUANCE_CHAIN_POLICY),
		"CERT_TRUST_IS_EXPLICIT_DISTRUST":              reflect.ValueOf(pkg.CERT_TRUST_IS_EXPLICIT_DISTRUST),
		"CERT_TRUST_HAS_NOT_SUPPORTED_CRITICAL_EXT":    reflect.ValueOf(pkg.CERT_TRUST_HAS_NOT_SUPPORTED_CRITICAL_EXT),
		"CERT_CHAIN_POLICY_BASE":                       reflect.ValueOf(pkg.CERT_CHAIN_POLICY_BASE),
		"CERT_CHAIN_POLICY_AUTHENTICODE":               reflect.ValueOf(pkg.CERT_CHAIN_POLICY_AUTHENTICODE),
		"CERT_CHAIN_POLICY_AUTHENTICODE_TS":            reflect.ValueOf(pkg.CERT_CHAIN_POLICY_AUTHENTICODE_TS),
		"CERT_CHAIN_POLICY_SSL":                        reflect.ValueOf(pkg.CERT_CHAIN_POLICY_SSL),
		"CERT_CHAIN_POLICY_BASIC_CONSTRAINTS":          reflect.ValueOf(pkg.CERT_CHAIN_POLICY_BASIC_CONSTRAINTS),
		"CERT_CHAIN_POLICY_NT_AUTH":                    reflect.ValueOf(pkg.CERT_CHAIN_POLICY_NT_AUTH),
		"CERT_CHAIN_POLICY_MICROSOFT_ROOT":             reflect.ValueOf(pkg.CERT_CHAIN_POLICY_MICROSOFT_ROOT),
		"CERT_CHAIN_POLICY_EV":                         reflect.ValueOf(pkg.CERT_CHAIN_POLICY_EV),
		"CERT_E_EXPIRED":                               reflect.ValueOf(pkg.CERT_E_EXPIRED),
		"CERT_E_ROLE":                                  reflect.ValueOf(pkg.CERT_E_ROLE),
		"CERT_E_PURPOSE":                               reflect.ValueOf(pkg.CERT_E_PURPOSE),
		"CERT_E_UNTRUSTEDROOT":                         reflect.ValueOf(pkg.CERT_E_UNTRUSTEDROOT),
		"CERT_E_CN_NO_MATCH":                           reflect.ValueOf(pkg.CERT_E_CN_NO_MATCH),
		"AUTHTYPE_CLIENT":                              reflect.ValueOf(pkg.AUTHTYPE_CLIENT),
		"AUTHTYPE_SERVER":                              reflect.ValueOf(pkg.AUTHTYPE_SERVER),
		"GetFileExInfoStandard":                        reflect.ValueOf(pkg.GetFileExInfoStandard),
		"GetFileExMaxInfoLevel":                        reflect.ValueOf(pkg.GetFileExMaxInfoLevel),
		"SW_HIDE":                                      reflect.ValueOf(pkg.SW_HIDE),
		"SW_NORMAL":                                    reflect.ValueOf(pkg.SW_NORMAL),
		"SW_SHOWNORMAL":                                reflect.ValueOf(pkg.SW_SHOWNORMAL),
		"SW_SHOWMINIMIZED":                             reflect.ValueOf(pkg.SW_SHOWMINIMIZED),
		"SW_SHOWMAXIMIZED":                             reflect.ValueOf(pkg.SW_SHOWMAXIMIZED),
		"SW_MAXIMIZE":                                  reflect.ValueOf(pkg.SW_MAXIMIZE),
		"SW_SHOWNOACTIVATE":                            reflect.ValueOf(pkg.SW_SHOWNOACTIVATE),
		"SW_SHOW":                                      reflect.ValueOf(pkg.SW_SHOW),
		"SW_MINIMIZE":                                  reflect.ValueOf(pkg.SW_MINIMIZE),
		"SW_SHOWMINNOACTIVE":                           reflect.ValueOf(pkg.SW_SHOWMINNOACTIVE),
		"SW_SHOWNA":                                    reflect.ValueOf(pkg.SW_SHOWNA),
		"SW_RESTORE":                                   reflect.ValueOf(pkg.SW_RESTORE),
		"SW_SHOWDEFAULT":                               reflect.ValueOf(pkg.SW_SHOWDEFAULT),
		"SW_FORCEMINIMIZE":                             reflect.ValueOf(pkg.SW_FORCEMINIMIZE),
		"AF_UNSPEC":                                    reflect.ValueOf(pkg.AF_UNSPEC),
		"AF_UNIX":                                      reflect.ValueOf(pkg.AF_UNIX),
		"AF_INET":                                      reflect.ValueOf(pkg.AF_INET),
		"AF_INET6":                                     reflect.ValueOf(pkg.AF_INET6),
		"AF_NETBIOS":                                   reflect.ValueOf(pkg.AF_NETBIOS),
		"SOCK_STREAM":                                  reflect.ValueOf(pkg.SOCK_STREAM),
		"SOCK_DGRAM":                                   reflect.ValueOf(pkg.SOCK_DGRAM),
		"SOCK_RAW":                                     reflect.ValueOf(pkg.SOCK_RAW),
		"SOCK_SEQPACKET":                               reflect.ValueOf(pkg.SOCK_SEQPACKET),
		"IPPROTO_IP":                                   reflect.ValueOf(pkg.IPPROTO_IP),
		"IPPROTO_IPV6":                                 reflect.ValueOf(pkg.IPPROTO_IPV6),
		"IPPROTO_TCP":                                  reflect.ValueOf(pkg.IPPROTO_TCP),
		"IPPROTO_UDP":                                  reflect.ValueOf(pkg.IPPROTO_UDP),
		"SOL_SOCKET":                                   reflect.ValueOf(pkg.SOL_SOCKET),
		"SO_REUSEADDR":                                 reflect.ValueOf(pkg.SO_REUSEADDR),
		"SO_KEEPALIVE":                                 reflect.ValueOf(pkg.SO_KEEPALIVE),
		"SO_DONTROUTE":                                 reflect.ValueOf(pkg.SO_DONTROUTE),
		"SO_BROADCAST":                                 reflect.ValueOf(pkg.SO_BROADCAST),
		"SO_LINGER":                                    reflect.ValueOf(pkg.SO_LINGER),
		"SO_RCVBUF":                                    reflect.ValueOf(pkg.SO_RCVBUF),
		"SO_SNDBUF":                                    reflect.ValueOf(pkg.SO_SNDBUF),
		"SO_UPDATE_ACCEPT_CONTEXT":                     reflect.ValueOf(pkg.SO_UPDATE_ACCEPT_CONTEXT),
		"SO_UPDATE_CONNECT_CONTEXT":                    reflect.ValueOf(pkg.SO_UPDATE_CONNECT_CONTEXT),
		"IOC_OUT":                                      reflect.ValueOf(pkg.IOC_OUT),
		"IOC_IN":                                       reflect.ValueOf(pkg.IOC_IN),
		"IOC_VENDOR":                                   reflect.ValueOf(pkg.IOC_VENDOR),
		"IOC_INOUT":                                    reflect.ValueOf(pkg.IOC_INOUT),
		"IOC_WS2":                                      reflect.ValueOf(pkg.IOC_WS2),
		"SIO_GET_EXTENSION_FUNCTION_POINTER":           reflect.ValueOf(pkg.SIO_GET_EXTENSION_FUNCTION_POINTER),
		"SIO_KEEPALIVE_VALS":                           reflect.ValueOf(pkg.SIO_KEEPALIVE_VALS),
		"SIO_UDP_CONNRESET":                            reflect.ValueOf(pkg.SIO_UDP_CONNRESET),
		"IP_TOS":                                       reflect.ValueOf(pkg.IP_TOS),
		"IP_TTL":                                       reflect.ValueOf(pkg.IP_TTL),
		"IP_MULTICAST_IF":                              reflect.ValueOf(pkg.IP_MULTICAST_IF),
		"IP_MULTICAST_TTL":                             reflect.ValueOf(pkg.IP_MULTICAST_TTL),
		"IP_MULTICAST_LOOP":                            reflect.ValueOf(pkg.IP_MULTICAST_LOOP),
		"IP_ADD_MEMBERSHIP":                            reflect.ValueOf(pkg.IP_ADD_MEMBERSHIP),
		"IP_DROP_MEMBERSHIP":                           reflect.ValueOf(pkg.IP_DROP_MEMBERSHIP),
		"IPV6_V6ONLY":                                  reflect.ValueOf(pkg.IPV6_V6ONLY),
		"IPV6_UNICAST_HOPS":                            reflect.ValueOf(pkg.IPV6_UNICAST_HOPS),
		"IPV6_MULTICAST_IF":                            reflect.ValueOf(pkg.IPV6_MULTICAST_IF),
		"IPV6_MULTICAST_HOPS":                          reflect.ValueOf(pkg.IPV6_MULTICAST_HOPS),
		"IPV6_MULTICAST_LOOP":                          reflect.ValueOf(pkg.IPV6_MULTICAST_LOOP),
		"IPV6_JOIN_GROUP":                              reflect.ValueOf(pkg.IPV6_JOIN_GROUP),
		"IPV6_LEAVE_GROUP":                             reflect.ValueOf(pkg.IPV6_LEAVE_GROUP),
		"SOMAXCONN":                                    reflect.ValueOf(pkg.SOMAXCONN),
		"TCP_NODELAY":                                  reflect.ValueOf(pkg.TCP_NODELAY),
		"SHUT_RD":                                      reflect.ValueOf(pkg.SHUT_RD),
		"SHUT_WR":                                      reflect.ValueOf(pkg.SHUT_WR),
		"SHUT_RDWR":                                    reflect.ValueOf(pkg.SHUT_RDWR),
		"WSADESCRIPTION_LEN":                           reflect.ValueOf(pkg.WSADESCRIPTION_LEN),
		"WSASYS_STATUS_LEN":                            reflect.ValueOf(pkg.WSASYS_STATUS_LEN),
		"S_IFMT":                                       reflect.ValueOf(pkg.S_IFMT),
		"S_IFIFO":                                      reflect.ValueOf(pkg.S_IFIFO),
		"S_IFCHR":                                      reflect.ValueOf(pkg.S_IFCHR),
		"S_IFDIR":                                      reflect.ValueOf(pkg.S_IFDIR),
		"S_IFBLK":                                      reflect.ValueOf(pkg.S_IFBLK),
		"S_IFREG":                                      reflect.ValueOf(pkg.S_IFREG),
		"S_IFLNK":                                      reflect.ValueOf(pkg.S_IFLNK),
		"S_IFSOCK":                                     reflect.ValueOf(pkg.S_IFSOCK),
		"S_ISUID":                                      reflect.ValueOf(pkg.S_ISUID),
		"S_ISGID":                                      reflect.ValueOf(pkg.S_ISGID),
		"S_ISVTX":                                      reflect.ValueOf(pkg.S_ISVTX),
		"S_IRUSR":                                      reflect.ValueOf(pkg.S_IRUSR),
		"S_IWRITE":                                     reflect.ValueOf(pkg.S_IWRITE),
		"S_IWUSR":                                      reflect.ValueOf(pkg.S_IWUSR),
		"S_IXUSR":                                      reflect.ValueOf(pkg.S_IXUSR),
		"FILE_TYPE_CHAR":                               reflect.ValueOf(pkg.FILE_TYPE_CHAR),
		"FILE_TYPE_DISK":                               reflect.ValueOf(pkg.FILE_TYPE_DISK),
		"FILE_TYPE_PIPE":                               reflect.ValueOf(pkg.FILE_TYPE_PIPE),
		"FILE_TYPE_REMOTE":                             reflect.ValueOf(pkg.FILE_TYPE_REMOTE),
		"FILE_TYPE_UNKNOWN":                            reflect.ValueOf(pkg.FILE_TYPE_UNKNOWN),
		"DNS_TYPE_A":                                   reflect.ValueOf(pkg.DNS_TYPE_A),
		"DNS_TYPE_NS":                                  reflect.ValueOf(pkg.DNS_TYPE_NS),
		"DNS_TYPE_MD":                                  reflect.ValueOf(pkg.DNS_TYPE_MD),
		"DNS_TYPE_MF":                                  reflect.ValueOf(pkg.DNS_TYPE_MF),
		"DNS_TYPE_CNAME":                               reflect.ValueOf(pkg.DNS_TYPE_CNAME),
		"DNS_TYPE_SOA":                                 reflect.ValueOf(pkg.DNS_TYPE_SOA),
		"DNS_TYPE_MB":                                  reflect.ValueOf(pkg.DNS_TYPE_MB),
		"DNS_TYPE_MG":                                  reflect.ValueOf(pkg.DNS_TYPE_MG),
		"DNS_TYPE_MR":                                  reflect.ValueOf(pkg.DNS_TYPE_MR),
		"DNS_TYPE_NULL":                                reflect.ValueOf(pkg.DNS_TYPE_NULL),
		"DNS_TYPE_WKS":                                 reflect.ValueOf(pkg.DNS_TYPE_WKS),
		"DNS_TYPE_PTR":                                 reflect.ValueOf(pkg.DNS_TYPE_PTR),
		"DNS_TYPE_HINFO":                               reflect.ValueOf(pkg.DNS_TYPE_HINFO),
		"DNS_TYPE_MINFO":                               reflect.ValueOf(pkg.DNS_TYPE_MINFO),
		"DNS_TYPE_MX":                                  reflect.ValueOf(pkg.DNS_TYPE_MX),
		"DNS_TYPE_TEXT":                                reflect.ValueOf(pkg.DNS_TYPE_TEXT),
		"DNS_TYPE_RP":                                  reflect.ValueOf(pkg.DNS_TYPE_RP),
		"DNS_TYPE_AFSDB":                               reflect.ValueOf(pkg.DNS_TYPE_AFSDB),
		"DNS_TYPE_X25":                                 reflect.ValueOf(pkg.DNS_TYPE_X25),
		"DNS_TYPE_ISDN":                                reflect.ValueOf(pkg.DNS_TYPE_ISDN),
		"DNS_TYPE_RT":                                  reflect.ValueOf(pkg.DNS_TYPE_RT),
		"DNS_TYPE_NSAP":                                reflect.ValueOf(pkg.DNS_TYPE_NSAP),
		"DNS_TYPE_NSAPPTR":                             reflect.ValueOf(pkg.DNS_TYPE_NSAPPTR),
		"DNS_TYPE_SIG":                                 reflect.ValueOf(pkg.DNS_TYPE_SIG),
		"DNS_TYPE_KEY":                                 reflect.ValueOf(pkg.DNS_TYPE_KEY),
		"DNS_TYPE_PX":                                  reflect.ValueOf(pkg.DNS_TYPE_PX),
		"DNS_TYPE_GPOS":                                reflect.ValueOf(pkg.DNS_TYPE_GPOS),
		"DNS_TYPE_AAAA":                                reflect.ValueOf(pkg.DNS_TYPE_AAAA),
		"DNS_TYPE_LOC":                                 reflect.ValueOf(pkg.DNS_TYPE_LOC),
		"DNS_TYPE_NXT":                                 reflect.ValueOf(pkg.DNS_TYPE_NXT),
		"DNS_TYPE_EID":                                 reflect.ValueOf(pkg.DNS_TYPE_EID),
		"DNS_TYPE_NIMLOC":                              reflect.ValueOf(pkg.DNS_TYPE_NIMLOC),
		"DNS_TYPE_SRV":                                 reflect.ValueOf(pkg.DNS_TYPE_SRV),
		"DNS_TYPE_ATMA":                                reflect.ValueOf(pkg.DNS_TYPE_ATMA),
		"DNS_TYPE_NAPTR":                               reflect.ValueOf(pkg.DNS_TYPE_NAPTR),
		"DNS_TYPE_KX":                                  reflect.ValueOf(pkg.DNS_TYPE_KX),
		"DNS_TYPE_CERT":                                reflect.ValueOf(pkg.DNS_TYPE_CERT),
		"DNS_TYPE_A6":                                  reflect.ValueOf(pkg.DNS_TYPE_A6),
		"DNS_TYPE_DNAME":                               reflect.ValueOf(pkg.DNS_TYPE_DNAME),
		"DNS_TYPE_SINK":                                reflect.ValueOf(pkg.DNS_TYPE_SINK),
		"DNS_TYPE_OPT":                                 reflect.ValueOf(pkg.DNS_TYPE_OPT),
		"DNS_TYPE_DS":                                  reflect.ValueOf(pkg.DNS_TYPE_DS),
		"DNS_TYPE_RRSIG":                               reflect.ValueOf(pkg.DNS_TYPE_RRSIG),
		"DNS_TYPE_NSEC":                                reflect.ValueOf(pkg.DNS_TYPE_NSEC),
		"DNS_TYPE_DNSKEY":                              reflect.ValueOf(pkg.DNS_TYPE_DNSKEY),
		"DNS_TYPE_DHCID":                               reflect.ValueOf(pkg.DNS_TYPE_DHCID),
		"DNS_TYPE_UINFO":                               reflect.ValueOf(pkg.DNS_TYPE_UINFO),
		"DNS_TYPE_UID":                                 reflect.ValueOf(pkg.DNS_TYPE_UID),
		"DNS_TYPE_GID":                                 reflect.ValueOf(pkg.DNS_TYPE_GID),
		"DNS_TYPE_UNSPEC":                              reflect.ValueOf(pkg.DNS_TYPE_UNSPEC),
		"DNS_TYPE_ADDRS":                               reflect.ValueOf(pkg.DNS_TYPE_ADDRS),
		"DNS_TYPE_TKEY":                                reflect.ValueOf(pkg.DNS_TYPE_TKEY),
		"DNS_TYPE_TSIG":                                reflect.ValueOf(pkg.DNS_TYPE_TSIG),
		"DNS_TYPE_IXFR":                                reflect.ValueOf(pkg.DNS_TYPE_IXFR),
		"DNS_TYPE_AXFR":                                reflect.ValueOf(pkg.DNS_TYPE_AXFR),
		"DNS_TYPE_MAILB":                               reflect.ValueOf(pkg.DNS_TYPE_MAILB),
		"DNS_TYPE_MAILA":                               reflect.ValueOf(pkg.DNS_TYPE_MAILA),
		"DNS_TYPE_ALL":                                 reflect.ValueOf(pkg.DNS_TYPE_ALL),
		"DNS_TYPE_ANY":                                 reflect.ValueOf(pkg.DNS_TYPE_ANY),
		"DNS_TYPE_WINS":                                reflect.ValueOf(pkg.DNS_TYPE_WINS),
		"DNS_TYPE_WINSR":                               reflect.ValueOf(pkg.DNS_TYPE_WINSR),
		"DNS_TYPE_NBSTAT":                              reflect.ValueOf(pkg.DNS_TYPE_NBSTAT),
		"DNS_INFO_NO_RECORDS":                          reflect.ValueOf(pkg.DNS_INFO_NO_RECORDS),
		"DnsSectionQuestion":                           reflect.ValueOf(pkg.DnsSectionQuestion),
		"DnsSectionAnswer":                             reflect.ValueOf(pkg.DnsSectionAnswer),
		"DnsSectionAuthority":                          reflect.ValueOf(pkg.DnsSectionAuthority),
		"DnsSectionAdditional":                         reflect.ValueOf(pkg.DnsSectionAdditional),
		"TF_DISCONNECT":                                reflect.ValueOf(pkg.TF_DISCONNECT),
		"TF_REUSE_SOCKET":                              reflect.ValueOf(pkg.TF_REUSE_SOCKET),
		"TF_WRITE_BEHIND":                              reflect.ValueOf(pkg.TF_WRITE_BEHIND),
		"TF_USE_DEFAULT_WORKER":                        reflect.ValueOf(pkg.TF_USE_DEFAULT_WORKER),
		"TF_USE_SYSTEM_THREAD":                         reflect.ValueOf(pkg.TF_USE_SYSTEM_THREAD),
		"TF_USE_KERNEL_APC":                            reflect.ValueOf(pkg.TF_USE_KERNEL_APC),
		"IFF_UP":                                       reflect.ValueOf(pkg.IFF_UP),
		"IFF_BROADCAST":                                reflect.ValueOf(pkg.IFF_BROADCAST),
		"IFF_LOOPBACK":                                 reflect.ValueOf(pkg.IFF_LOOPBACK),
		"IFF_POINTTOPOINT":                             reflect.ValueOf(pkg.IFF_POINTTOPOINT),
		"IFF_MULTICAST":                                reflect.ValueOf(pkg.IFF_MULTICAST),
		"SIO_GET_INTERFACE_LIST":                       reflect.ValueOf(pkg.SIO_GET_INTERFACE_LIST),
		"MAX_ADAPTER_NAME_LENGTH":                      reflect.ValueOf(pkg.MAX_ADAPTER_NAME_LENGTH),
		"MAX_ADAPTER_DESCRIPTION_LENGTH":               reflect.ValueOf(pkg.MAX_ADAPTER_DESCRIPTION_LENGTH),
		"MAX_ADAPTER_ADDRESS_LENGTH":                   reflect.ValueOf(pkg.MAX_ADAPTER_ADDRESS_LENGTH),
		"MAXLEN_PHYSADDR":                              reflect.ValueOf(pkg.MAXLEN_PHYSADDR),
		"MAX_INTERFACE_NAME_LEN":                       reflect.ValueOf(pkg.MAX_INTERFACE_NAME_LEN),
		"MAXLEN_IFDESCR":                               reflect.ValueOf(pkg.MAXLEN_IFDESCR),
		"HKEY_CLASSES_ROOT":                            reflect.ValueOf(pkg.HKEY_CLASSES_ROOT),
		"HKEY_CURRENT_USER":                            reflect.ValueOf(pkg.HKEY_CURRENT_USER),
		"HKEY_LOCAL_MACHINE":                           reflect.ValueOf(pkg.HKEY_LOCAL_MACHINE),
		"HKEY_USERS":                                   reflect.ValueOf(pkg.HKEY_USERS),
		"HKEY_PERFORMANCE_DATA":                        reflect.ValueOf(pkg.HKEY_PERFORMANCE_DATA),
		"HKEY_CURRENT_CONFIG":                          reflect.ValueOf(pkg.HKEY_CURRENT_CONFIG),
		"HKEY_DYN_DATA":                                reflect.ValueOf(pkg.HKEY_DYN_DATA),
		"KEY_QUERY_VALUE":                              reflect.ValueOf(pkg.KEY_QUERY_VALUE),
		"KEY_SET_VALUE":                                reflect.ValueOf(pkg.KEY_SET_VALUE),
		"KEY_CREATE_SUB_KEY":                           reflect.ValueOf(pkg.KEY_CREATE_SUB_KEY),
		"KEY_ENUMERATE_SUB_KEYS":                       reflect.ValueOf(pkg.KEY_ENUMERATE_SUB_KEYS),
		"KEY_NOTIFY":                                   reflect.ValueOf(pkg.KEY_NOTIFY),
		"KEY_CREATE_LINK":                              reflect.ValueOf(pkg.KEY_CREATE_LINK),
		"KEY_WRITE":                                    reflect.ValueOf(pkg.KEY_WRITE),
		"KEY_EXECUTE":                                  reflect.ValueOf(pkg.KEY_EXECUTE),
		"KEY_READ":                                     reflect.ValueOf(pkg.KEY_READ),
		"KEY_WOW64_64KEY":                              reflect.ValueOf(pkg.KEY_WOW64_64KEY),
		"KEY_WOW64_32KEY":                              reflect.ValueOf(pkg.KEY_WOW64_32KEY),
		"KEY_ALL_ACCESS":                               reflect.ValueOf(pkg.KEY_ALL_ACCESS),
		"REG_NONE":                                     reflect.ValueOf(pkg.REG_NONE),
		"REG_SZ":                                       reflect.ValueOf(pkg.REG_SZ),
		"REG_EXPAND_SZ":                                reflect.ValueOf(pkg.REG_EXPAND_SZ),
		"REG_BINARY":                                   reflect.ValueOf(pkg.REG_BINARY),
		"REG_DWORD_LITTLE_ENDIAN":                      reflect.ValueOf(pkg.REG_DWORD_LITTLE_ENDIAN),
		"REG_DWORD_BIG_ENDIAN":                         reflect.ValueOf(pkg.REG_DWORD_BIG_ENDIAN),
		"REG_LINK":                                     reflect.ValueOf(pkg.REG_LINK),
		"REG_MULTI_SZ":                                 reflect.ValueOf(pkg.REG_MULTI_SZ),
		"REG_RESOURCE_LIST":                            reflect.ValueOf(pkg.REG_RESOURCE_LIST),
		"REG_FULL_RESOURCE_DESCRIPTOR":                 reflect.ValueOf(pkg.REG_FULL_RESOURCE_DESCRIPTOR),
		"REG_RESOURCE_REQUIREMENTS_LIST":               reflect.ValueOf(pkg.REG_RESOURCE_REQUIREMENTS_LIST),
		"REG_QWORD_LITTLE_ENDIAN":                      reflect.ValueOf(pkg.REG_QWORD_LITTLE_ENDIAN),
		"REG_DWORD":                                    reflect.ValueOf(pkg.REG_DWORD),
		"REG_QWORD":                                    reflect.ValueOf(pkg.REG_QWORD),
		"AI_PASSIVE":                                   reflect.ValueOf(pkg.AI_PASSIVE),
		"AI_CANONNAME":                                 reflect.ValueOf(pkg.AI_CANONNAME),
		"AI_NUMERICHOST":                               reflect.ValueOf(pkg.AI_NUMERICHOST),
		"FILE_SKIP_COMPLETION_PORT_ON_SUCCESS":         reflect.ValueOf(pkg.FILE_SKIP_COMPLETION_PORT_ON_SUCCESS),
		"FILE_SKIP_SET_EVENT_ON_HANDLE":                reflect.ValueOf(pkg.FILE_SKIP_SET_EVENT_ON_HANDLE),
		"WSAPROTOCOL_LEN":                              reflect.ValueOf(pkg.WSAPROTOCOL_LEN),
		"MAX_PROTOCOL_CHAIN":                           reflect.ValueOf(pkg.MAX_PROTOCOL_CHAIN),
		"BASE_PROTOCOL":                                reflect.ValueOf(pkg.BASE_PROTOCOL),
		"LAYERED_PROTOCOL":                             reflect.ValueOf(pkg.LAYERED_PROTOCOL),
		"XP1_CONNECTIONLESS":                           reflect.ValueOf(pkg.XP1_CONNECTIONLESS),
		"XP1_GUARANTEED_DELIVERY":                      reflect.ValueOf(pkg.XP1_GUARANTEED_DELIVERY),
		"XP1_GUARANTEED_ORDER":                         reflect.ValueOf(pkg.XP1_GUARANTEED_ORDER),
		"XP1_MESSAGE_ORIENTED":                         reflect.ValueOf(pkg.XP1_MESSAGE_ORIENTED),
		"XP1_PSEUDO_STREAM":                            reflect.ValueOf(pkg.XP1_PSEUDO_STREAM),
		"XP1_GRACEFUL_CLOSE":                           reflect.ValueOf(pkg.XP1_GRACEFUL_CLOSE),
		"XP1_EXPEDITED_DATA":                           reflect.ValueOf(pkg.XP1_EXPEDITED_DATA),
		"XP1_CONNECT_DATA":                             reflect.ValueOf(pkg.XP1_CONNECT_DATA),
		"XP1_DISCONNECT_DATA":                          reflect.ValueOf(pkg.XP1_DISCONNECT_DATA),
		"XP1_SUPPORT_BROADCAST":                        reflect.ValueOf(pkg.XP1_SUPPORT_BROADCAST),
		"XP1_SUPPORT_MULTIPOINT":                       reflect.ValueOf(pkg.XP1_SUPPORT_MULTIPOINT),
		"XP1_MULTIPOINT_CONTROL_PLANE":                 reflect.ValueOf(pkg.XP1_MULTIPOINT_CONTROL_PLANE),
		"XP1_MULTIPOINT_DATA_PLANE":                    reflect.ValueOf(pkg.XP1_MULTIPOINT_DATA_PLANE),
		"XP1_QOS_SUPPORTED":                            reflect.ValueOf(pkg.XP1_QOS_SUPPORTED),
		"XP1_UNI_SEND":                                 reflect.ValueOf(pkg.XP1_UNI_SEND),
		"XP1_UNI_RECV":                                 reflect.ValueOf(pkg.XP1_UNI_RECV),
		"XP1_IFS_HANDLES":                              reflect.ValueOf(pkg.XP1_IFS_HANDLES),
		"XP1_PARTIAL_MESSAGE":                          reflect.ValueOf(pkg.XP1_PARTIAL_MESSAGE),
		"XP1_SAN_SUPPORT_SDP":                          reflect.ValueOf(pkg.XP1_SAN_SUPPORT_SDP),
		"PFL_MULTIPLE_PROTO_ENTRIES":                   reflect.ValueOf(pkg.PFL_MULTIPLE_PROTO_ENTRIES),
		"PFL_RECOMMENDED_PROTO_ENTRY":                  reflect.ValueOf(pkg.PFL_RECOMMENDED_PROTO_ENTRY),
		"PFL_HIDDEN":                                   reflect.ValueOf(pkg.PFL_HIDDEN),
		"PFL_MATCHES_PROTOCOL_ZERO":                    reflect.ValueOf(pkg.PFL_MATCHES_PROTOCOL_ZERO),
		"PFL_NETWORKDIRECT_PROVIDER":                   reflect.ValueOf(pkg.PFL_NETWORKDIRECT_PROVIDER),
		"FSCTL_GET_REPARSE_POINT":                      reflect.ValueOf(pkg.FSCTL_GET_REPARSE_POINT),
		"MAXIMUM_REPARSE_DATA_BUFFER_SIZE":             reflect.ValueOf(pkg.MAXIMUM_REPARSE_DATA_BUFFER_SIZE),
		"IO_REPARSE_TAG_SYMLINK":                       reflect.ValueOf(pkg.IO_REPARSE_TAG_SYMLINK),
		"SYMBOLIC_LINK_FLAG_DIRECTORY":                 reflect.ValueOf(pkg.SYMBOLIC_LINK_FLAG_DIRECTORY),
		"UNIX_PATH_MAX":                                reflect.ValueOf(pkg.UNIX_PATH_MAX),
		"ENOENT":                                       reflect.ValueOf(pkg.ENOENT),
		"ENOTDIR":                                      reflect.ValueOf(pkg.ENOTDIR),
		"APPLICATION_ERROR":                            reflect.ValueOf(pkg.APPLICATION_ERROR),
		"E2BIG":                                        reflect.ValueOf(pkg.E2BIG),
		"EACCES":                                       reflect.ValueOf(pkg.EACCES),
		"EADDRINUSE":                                   reflect.ValueOf(pkg.EADDRINUSE),
		"EADDRNOTAVAIL":                                reflect.ValueOf(pkg.EADDRNOTAVAIL),
		"EADV":                                         reflect.ValueOf(pkg.EADV),
		"EAFNOSUPPORT":                                 reflect.ValueOf(pkg.EAFNOSUPPORT),
		"EAGAIN":                                       reflect.ValueOf(pkg.EAGAIN),
		"EALREADY":                                     reflect.ValueOf(pkg.EALREADY),
		"EBADE":                                        reflect.ValueOf(pkg.EBADE),
		"EBADF":                                        reflect.ValueOf(pkg.EBADF),
		"EBADFD":                                       reflect.ValueOf(pkg.EBADFD),
		"EBADMSG":                                      reflect.ValueOf(pkg.EBADMSG),
		"EBADR":                                        reflect.ValueOf(pkg.EBADR),
		"EBADRQC":                                      reflect.ValueOf(pkg.EBADRQC),
		"EBADSLT":                                      reflect.ValueOf(pkg.EBADSLT),
		"EBFONT":                                       reflect.ValueOf(pkg.EBFONT),
		"EBUSY":                                        reflect.ValueOf(pkg.EBUSY),
		"ECANCELED":                                    reflect.ValueOf(pkg.ECANCELED),
		"ECHILD":                                       reflect.ValueOf(pkg.ECHILD),
		"ECHRNG":                                       reflect.ValueOf(pkg.ECHRNG),
		"ECOMM":                                        reflect.ValueOf(pkg.ECOMM),
		"ECONNABORTED":                                 reflect.ValueOf(pkg.ECONNABORTED),
		"ECONNREFUSED":                                 reflect.ValueOf(pkg.ECONNREFUSED),
		"ECONNRESET":                                   reflect.ValueOf(pkg.ECONNRESET),
		"EDEADLK":                                      reflect.ValueOf(pkg.EDEADLK),
		"EDEADLOCK":                                    reflect.ValueOf(pkg.EDEADLOCK),
		"EDESTADDRREQ":                                 reflect.ValueOf(pkg.EDESTADDRREQ),
		"EDOM":                                         reflect.ValueOf(pkg.EDOM),
		"EDOTDOT":                                      reflect.ValueOf(pkg.EDOTDOT),
		"EDQUOT":                                       reflect.ValueOf(pkg.EDQUOT),
		"EEXIST":                                       reflect.ValueOf(pkg.EEXIST),
		"EFAULT":                                       reflect.ValueOf(pkg.EFAULT),
		"EFBIG":                                        reflect.ValueOf(pkg.EFBIG),
		"EHOSTDOWN":                                    reflect.ValueOf(pkg.EHOSTDOWN),
		"EHOSTUNREACH":                                 reflect.ValueOf(pkg.EHOSTUNREACH),
		"EIDRM":                                        reflect.ValueOf(pkg.EIDRM),
		"EILSEQ":                                       reflect.ValueOf(pkg.EILSEQ),
		"EINPROGRESS":                                  reflect.ValueOf(pkg.EINPROGRESS),
		"EINTR":                                        reflect.ValueOf(pkg.EINTR),
		"EINVAL":                                       reflect.ValueOf(pkg.EINVAL),
		"EIO":                                          reflect.ValueOf(pkg.EIO),
		"EISCONN":                                      reflect.ValueOf(pkg.EISCONN),
		"EISDIR":                                       reflect.ValueOf(pkg.EISDIR),
		"EISNAM":                                       reflect.ValueOf(pkg.EISNAM),
		"EKEYEXPIRED":                                  reflect.ValueOf(pkg.EKEYEXPIRED),
		"EKEYREJECTED":                                 reflect.ValueOf(pkg.EKEYREJECTED),
		"EKEYREVOKED":                                  reflect.ValueOf(pkg.EKEYREVOKED),
		"EL2HLT":                                       reflect.ValueOf(pkg.EL2HLT),
		"EL2NSYNC":                                     reflect.ValueOf(pkg.EL2NSYNC),
		"EL3HLT":                                       reflect.ValueOf(pkg.EL3HLT),
		"EL3RST":                                       reflect.ValueOf(pkg.EL3RST),
		"ELIBACC":                                      reflect.ValueOf(pkg.ELIBACC),
		"ELIBBAD":                                      reflect.ValueOf(pkg.ELIBBAD),
		"ELIBEXEC":                                     reflect.ValueOf(pkg.ELIBEXEC),
		"ELIBMAX":                                      reflect.ValueOf(pkg.ELIBMAX),
		"ELIBSCN":                                      reflect.ValueOf(pkg.ELIBSCN),
		"ELNRNG":                                       reflect.ValueOf(pkg.ELNRNG),
		"ELOOP":                                        reflect.ValueOf(pkg.ELOOP),
		"EMEDIUMTYPE":                                  reflect.ValueOf(pkg.EMEDIUMTYPE),
		"EMFILE":                                       reflect.ValueOf(pkg.EMFILE),
		"EMLINK":                                       reflect.ValueOf(pkg.EMLINK),
		"EMSGSIZE":                                     reflect.ValueOf(pkg.EMSGSIZE),
		"EMULTIHOP":                                    reflect.ValueOf(pkg.EMULTIHOP),
		"ENAMETOOLONG":                                 reflect.ValueOf(pkg.ENAMETOOLONG),
		"ENAVAIL":                                      reflect.ValueOf(pkg.ENAVAIL),
		"ENETDOWN":                                     reflect.ValueOf(pkg.ENETDOWN),
		"ENETRESET":                                    reflect.ValueOf(pkg.ENETRESET),
		"ENETUNREACH":                                  reflect.ValueOf(pkg.ENETUNREACH),
		"ENFILE":                                       reflect.ValueOf(pkg.ENFILE),
		"ENOANO":                                       reflect.ValueOf(pkg.ENOANO),
		"ENOBUFS":                                      reflect.ValueOf(pkg.ENOBUFS),
		"ENOCSI":                                       reflect.ValueOf(pkg.ENOCSI),
		"ENODATA":                                      reflect.ValueOf(pkg.ENODATA),
		"ENODEV":                                       reflect.ValueOf(pkg.ENODEV),
		"ENOEXEC":                                      reflect.ValueOf(pkg.ENOEXEC),
		"ENOKEY":                                       reflect.ValueOf(pkg.ENOKEY),
		"ENOLCK":                                       reflect.ValueOf(pkg.ENOLCK),
		"ENOLINK":                                      reflect.ValueOf(pkg.ENOLINK),
		"ENOMEDIUM":                                    reflect.ValueOf(pkg.ENOMEDIUM),
		"ENOMEM":                                       reflect.ValueOf(pkg.ENOMEM),
		"ENOMSG":                                       reflect.ValueOf(pkg.ENOMSG),
		"ENONET":                                       reflect.ValueOf(pkg.ENONET),
		"ENOPKG":                                       reflect.ValueOf(pkg.ENOPKG),
		"ENOPROTOOPT":                                  reflect.ValueOf(pkg.ENOPROTOOPT),
		"ENOSPC":                                       reflect.ValueOf(pkg.ENOSPC),
		"ENOSR":                                        reflect.ValueOf(pkg.ENOSR),
		"ENOSTR":                                       reflect.ValueOf(pkg.ENOSTR),
		"ENOSYS":                                       reflect.ValueOf(pkg.ENOSYS),
		"ENOTBLK":                                      reflect.ValueOf(pkg.ENOTBLK),
		"ENOTCONN":                                     reflect.ValueOf(pkg.ENOTCONN),
		"ENOTEMPTY":                                    reflect.ValueOf(pkg.ENOTEMPTY),
		"ENOTNAM":                                      reflect.ValueOf(pkg.ENOTNAM),
		"ENOTRECOVERABLE":                              reflect.ValueOf(pkg.ENOTRECOVERABLE),
		"ENOTSOCK":                                     reflect.ValueOf(pkg.ENOTSOCK),
		"ENOTSUP":                                      reflect.ValueOf(pkg.ENOTSUP),
		"ENOTTY":                                       reflect.ValueOf(pkg.ENOTTY),
		"ENOTUNIQ":                                     reflect.ValueOf(pkg.ENOTUNIQ),
		"ENXIO":                                        reflect.ValueOf(pkg.ENXIO),
		"EOPNOTSUPP":                                   reflect.ValueOf(pkg.EOPNOTSUPP),
		"EOVERFLOW":                                    reflect.ValueOf(pkg.EOVERFLOW),
		"EOWNERDEAD":                                   reflect.ValueOf(pkg.EOWNERDEAD),
		"EPERM":                                        reflect.ValueOf(pkg.EPERM),
		"EPFNOSUPPORT":                                 reflect.ValueOf(pkg.EPFNOSUPPORT),
		"EPIPE":                                        reflect.ValueOf(pkg.EPIPE),
		"EPROTO":                                       reflect.ValueOf(pkg.EPROTO),
		"EPROTONOSUPPORT":                              reflect.ValueOf(pkg.EPROTONOSUPPORT),
		"EPROTOTYPE":                                   reflect.ValueOf(pkg.EPROTOTYPE),
		"ERANGE":                                       reflect.ValueOf(pkg.ERANGE),
		"EREMCHG":                                      reflect.ValueOf(pkg.EREMCHG),
		"EREMOTE":                                      reflect.ValueOf(pkg.EREMOTE),
		"EREMOTEIO":                                    reflect.ValueOf(pkg.EREMOTEIO),
		"ERESTART":                                     reflect.ValueOf(pkg.ERESTART),
		"EROFS":                                        reflect.ValueOf(pkg.EROFS),
		"ESHUTDOWN":                                    reflect.ValueOf(pkg.ESHUTDOWN),
		"ESOCKTNOSUPPORT":                              reflect.ValueOf(pkg.ESOCKTNOSUPPORT),
		"ESPIPE":                                       reflect.ValueOf(pkg.ESPIPE),
		"ESRCH":                                        reflect.ValueOf(pkg.ESRCH),
		"ESRMNT":                                       reflect.ValueOf(pkg.ESRMNT),
		"ESTALE":                                       reflect.ValueOf(pkg.ESTALE),
		"ESTRPIPE":                                     reflect.ValueOf(pkg.ESTRPIPE),
		"ETIME":                                        reflect.ValueOf(pkg.ETIME),
		"ETIMEDOUT":                                    reflect.ValueOf(pkg.ETIMEDOUT),
		"ETOOMANYREFS":                                 reflect.ValueOf(pkg.ETOOMANYREFS),
		"ETXTBSY":                                      reflect.ValueOf(pkg.ETXTBSY),
		"EUCLEAN":                                      reflect.ValueOf(pkg.EUCLEAN),
		"EUNATCH":                                      reflect.ValueOf(pkg.EUNATCH),
		"EUSERS":                                       reflect.ValueOf(pkg.EUSERS),
		"EWOULDBLOCK":                                  reflect.ValueOf(pkg.EWOULDBLOCK),
		"EXDEV":                                        reflect.ValueOf(pkg.EXDEV),
		"EXFULL":                                       reflect.ValueOf(pkg.EXFULL),
		"EWINDOWS":                                     reflect.ValueOf(pkg.EWINDOWS),

		// Variables

		"Stdin":                   reflect.ValueOf(&pkg.Stdin),
		"Stdout":                  reflect.ValueOf(&pkg.Stdout),
		"Stderr":                  reflect.ValueOf(&pkg.Stderr),
		"SocketDisableIPv6":       reflect.ValueOf(&pkg.SocketDisableIPv6),
		"OID_PKIX_KP_SERVER_AUTH": reflect.ValueOf(&pkg.OID_PKIX_KP_SERVER_AUTH),
		"OID_SERVER_GATED_CRYPTO": reflect.ValueOf(&pkg.OID_SERVER_GATED_CRYPTO),
		"OID_SGC_NETSCAPE":        reflect.ValueOf(&pkg.OID_SGC_NETSCAPE),
		"WSAID_CONNECTEX":         reflect.ValueOf(&pkg.WSAID_CONNECTEX),
		"ForkLock":                reflect.ValueOf(&pkg.ForkLock),
	})
	registerTypes("syscall", map[string]reflect.Type{
		// Non interfaces

		"UserInfo10":                  reflect.TypeOf((*pkg.UserInfo10)(nil)).Elem(),
		"SID":                         reflect.TypeOf((*pkg.SID)(nil)).Elem(),
		"SIDAndAttributes":            reflect.TypeOf((*pkg.SIDAndAttributes)(nil)).Elem(),
		"Tokenuser":                   reflect.TypeOf((*pkg.Tokenuser)(nil)).Elem(),
		"Tokenprimarygroup":           reflect.TypeOf((*pkg.Tokenprimarygroup)(nil)).Elem(),
		"Token":                       reflect.TypeOf((*pkg.Token)(nil)).Elem(),
		"Handle":                      reflect.TypeOf((*pkg.Handle)(nil)).Elem(),
		"Errno":                       reflect.TypeOf((*pkg.Errno)(nil)).Elem(),
		"RawSockaddrInet4":            reflect.TypeOf((*pkg.RawSockaddrInet4)(nil)).Elem(),
		"RawSockaddrInet6":            reflect.TypeOf((*pkg.RawSockaddrInet6)(nil)).Elem(),
		"RawSockaddr":                 reflect.TypeOf((*pkg.RawSockaddr)(nil)).Elem(),
		"RawSockaddrAny":              reflect.TypeOf((*pkg.RawSockaddrAny)(nil)).Elem(),
		"SockaddrInet4":               reflect.TypeOf((*pkg.SockaddrInet4)(nil)).Elem(),
		"SockaddrInet6":               reflect.TypeOf((*pkg.SockaddrInet6)(nil)).Elem(),
		"RawSockaddrUnix":             reflect.TypeOf((*pkg.RawSockaddrUnix)(nil)).Elem(),
		"SockaddrUnix":                reflect.TypeOf((*pkg.SockaddrUnix)(nil)).Elem(),
		"Rusage":                      reflect.TypeOf((*pkg.Rusage)(nil)).Elem(),
		"WaitStatus":                  reflect.TypeOf((*pkg.WaitStatus)(nil)).Elem(),
		"Timespec":                    reflect.TypeOf((*pkg.Timespec)(nil)).Elem(),
		"Linger":                      reflect.TypeOf((*pkg.Linger)(nil)).Elem(),
		"IPMreq":                      reflect.TypeOf((*pkg.IPMreq)(nil)).Elem(),
		"IPv6Mreq":                    reflect.TypeOf((*pkg.IPv6Mreq)(nil)).Elem(),
		"Signal":                      reflect.TypeOf((*pkg.Signal)(nil)).Elem(),
		"Pointer":                     reflect.TypeOf((*pkg.Pointer)(nil)).Elem(),
		"Timeval":                     reflect.TypeOf((*pkg.Timeval)(nil)).Elem(),
		"SecurityAttributes":          reflect.TypeOf((*pkg.SecurityAttributes)(nil)).Elem(),
		"Overlapped":                  reflect.TypeOf((*pkg.Overlapped)(nil)).Elem(),
		"FileNotifyInformation":       reflect.TypeOf((*pkg.FileNotifyInformation)(nil)).Elem(),
		"Filetime":                    reflect.TypeOf((*pkg.Filetime)(nil)).Elem(),
		"Win32finddata":               reflect.TypeOf((*pkg.Win32finddata)(nil)).Elem(),
		"ByHandleFileInformation":     reflect.TypeOf((*pkg.ByHandleFileInformation)(nil)).Elem(),
		"Win32FileAttributeData":      reflect.TypeOf((*pkg.Win32FileAttributeData)(nil)).Elem(),
		"StartupInfo":                 reflect.TypeOf((*pkg.StartupInfo)(nil)).Elem(),
		"ProcessInformation":          reflect.TypeOf((*pkg.ProcessInformation)(nil)).Elem(),
		"ProcessEntry32":              reflect.TypeOf((*pkg.ProcessEntry32)(nil)).Elem(),
		"Systemtime":                  reflect.TypeOf((*pkg.Systemtime)(nil)).Elem(),
		"Timezoneinformation":         reflect.TypeOf((*pkg.Timezoneinformation)(nil)).Elem(),
		"WSABuf":                      reflect.TypeOf((*pkg.WSABuf)(nil)).Elem(),
		"Hostent":                     reflect.TypeOf((*pkg.Hostent)(nil)).Elem(),
		"Protoent":                    reflect.TypeOf((*pkg.Protoent)(nil)).Elem(),
		"DNSSRVData":                  reflect.TypeOf((*pkg.DNSSRVData)(nil)).Elem(),
		"DNSPTRData":                  reflect.TypeOf((*pkg.DNSPTRData)(nil)).Elem(),
		"DNSMXData":                   reflect.TypeOf((*pkg.DNSMXData)(nil)).Elem(),
		"DNSTXTData":                  reflect.TypeOf((*pkg.DNSTXTData)(nil)).Elem(),
		"DNSRecord":                   reflect.TypeOf((*pkg.DNSRecord)(nil)).Elem(),
		"TransmitFileBuffers":         reflect.TypeOf((*pkg.TransmitFileBuffers)(nil)).Elem(),
		"SockaddrGen":                 reflect.TypeOf((*pkg.SockaddrGen)(nil)).Elem(),
		"InterfaceInfo":               reflect.TypeOf((*pkg.InterfaceInfo)(nil)).Elem(),
		"IpAddressString":             reflect.TypeOf((*pkg.IpAddressString)(nil)).Elem(),
		"IpMaskString":                reflect.TypeOf((*pkg.IpMaskString)(nil)).Elem(),
		"IpAddrString":                reflect.TypeOf((*pkg.IpAddrString)(nil)).Elem(),
		"IpAdapterInfo":               reflect.TypeOf((*pkg.IpAdapterInfo)(nil)).Elem(),
		"MibIfRow":                    reflect.TypeOf((*pkg.MibIfRow)(nil)).Elem(),
		"CertInfo":                    reflect.TypeOf((*pkg.CertInfo)(nil)).Elem(),
		"CertContext":                 reflect.TypeOf((*pkg.CertContext)(nil)).Elem(),
		"CertChainContext":            reflect.TypeOf((*pkg.CertChainContext)(nil)).Elem(),
		"CertTrustListInfo":           reflect.TypeOf((*pkg.CertTrustListInfo)(nil)).Elem(),
		"CertSimpleChain":             reflect.TypeOf((*pkg.CertSimpleChain)(nil)).Elem(),
		"CertChainElement":            reflect.TypeOf((*pkg.CertChainElement)(nil)).Elem(),
		"CertRevocationCrlInfo":       reflect.TypeOf((*pkg.CertRevocationCrlInfo)(nil)).Elem(),
		"CertRevocationInfo":          reflect.TypeOf((*pkg.CertRevocationInfo)(nil)).Elem(),
		"CertTrustStatus":             reflect.TypeOf((*pkg.CertTrustStatus)(nil)).Elem(),
		"CertUsageMatch":              reflect.TypeOf((*pkg.CertUsageMatch)(nil)).Elem(),
		"CertEnhKeyUsage":             reflect.TypeOf((*pkg.CertEnhKeyUsage)(nil)).Elem(),
		"CertChainPara":               reflect.TypeOf((*pkg.CertChainPara)(nil)).Elem(),
		"CertChainPolicyPara":         reflect.TypeOf((*pkg.CertChainPolicyPara)(nil)).Elem(),
		"SSLExtraCertChainPolicyPara": reflect.TypeOf((*pkg.SSLExtraCertChainPolicyPara)(nil)).Elem(),
		"CertChainPolicyStatus":       reflect.TypeOf((*pkg.CertChainPolicyStatus)(nil)).Elem(),
		"AddrinfoW":                   reflect.TypeOf((*pkg.AddrinfoW)(nil)).Elem(),
		"GUID":                        reflect.TypeOf((*pkg.GUID)(nil)).Elem(),
		"WSAProtocolInfo":             reflect.TypeOf((*pkg.WSAProtocolInfo)(nil)).Elem(),
		"WSAProtocolChain":            reflect.TypeOf((*pkg.WSAProtocolChain)(nil)).Elem(),
		"TCPKeepalive":                reflect.TypeOf((*pkg.TCPKeepalive)(nil)).Elem(),
		"WSAData":                     reflect.TypeOf((*pkg.WSAData)(nil)).Elem(),
		"Servent":                     reflect.TypeOf((*pkg.Servent)(nil)).Elem(),
		"ProcAttr":                    reflect.TypeOf((*pkg.ProcAttr)(nil)).Elem(),
		"SysProcAttr":                 reflect.TypeOf((*pkg.SysProcAttr)(nil)).Elem(),
		"DLLError":                    reflect.TypeOf((*pkg.DLLError)(nil)).Elem(),
		"DLL":                         reflect.TypeOf((*pkg.DLL)(nil)).Elem(),
		"Proc":                        reflect.TypeOf((*pkg.Proc)(nil)).Elem(),
		"LazyDLL":                     reflect.TypeOf((*pkg.LazyDLL)(nil)).Elem(),
		"LazyProc":                    reflect.TypeOf((*pkg.LazyProc)(nil)).Elem(),
	})
}
